{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,ktB,I,E,C,EGA5F,EAAiB,IAAA,IAAoB,yCAAA,YAAA,GAAA,EAA0C,QAAQ,GEAhF,MAAM,EAAe,WACf,EAAgB,YEOtB,SAAS,EAAY,CAAQ,EAClC,IAAM,EAAQ,IAAI,MAElB,OADA,EAAM,GAAG,CAAG,EACL,CACT,CASO,SAAS,EAAe,CAAK,CAAE,CAAK,EACzC,OACE,EAAM,QAAQ,CAAC,CAAC,CAAG,EAAM,QAAQ,CAAC,CAAC,CAAG,EAAM,KAAK,EACjD,EAAM,QAAQ,CAAC,CAAC,CAAG,EAAM,KAAK,CAAG,EAAM,QAAQ,CAAC,CAAC,EACjD,EAAM,QAAQ,CAAC,CAAC,CAAG,EAAM,QAAQ,CAAC,CAAC,CAAG,EAAM,MAAM,EAClD,EAAM,QAAQ,CAAC,CAAC,CAAG,EAAM,MAAM,CAAG,EAAM,QAAQ,CAAC,CAAC,AAEtD,CA6BO,SAAS,EAAiB,CAAO,EAEtC,OACE,EAAQ,QAAQ,CAAC,CAAC,CAAG,EAAQ,KAAK,CAAG,GACrC,EAAQ,QAAQ,CAAC,CAAC,CAAG,OAAO,UAAU,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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-0c58cfd5ecc6e305.js","src/js/index.js","src/js/Game.js","node_modules/@parcel/runtime-js/lib/runtime-ccdeec9af0544dab.js","src/js/entities/Player.js","src/js/constants.js","src/js/sprites/SpriteAnimation.js","src/js/utils.js","src/js/entities/Bullet.js","node_modules/@parcel/runtime-js/lib/runtime-5a8a28c861172e8d.js","node_modules/@parcel/runtime-js/lib/runtime-789fcfee79dbc09c.js","node_modules/@parcel/runtime-js/lib/runtime-d7ceabda0ed57daa.js","node_modules/@parcel/runtime-js/lib/runtime-bccede733af3bde6.js","node_modules/@parcel/runtime-js/lib/runtime-e9c2b29a9452199b.js","node_modules/@parcel/runtime-js/lib/runtime-916c698d0e51dbc9.js","node_modules/@parcel/runtime-js/lib/runtime-100bc8624822bff2.js","src/js/sprites/spriteStates.js","src/js/entities/Platform.js","src/js/entities/Enemy.js","node_modules/@parcel/runtime-js/lib/runtime-d461e6fdfc00b76b.js","node_modules/@parcel/runtime-js/lib/runtime-39a0eb9581ccb40d.js","node_modules/@parcel/runtime-js/lib/runtime-f733ce0962c7a6e3.js","node_modules/@parcel/runtime-js/lib/runtime-9293127d787baca8.js","src/js/Audio.js","src/js/entities/Explosion.js","node_modules/@parcel/runtime-js/lib/runtime-0d10f20f674df6f4.js","node_modules/@parcel/runtime-js/lib/runtime-2558042c6641bc5a.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire1144\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire1144\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $cabea9b1ec3533ac$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"ioUUD\",\"index.53ea7bc5.js\",\"eUXST\",\"platform.11c76040.png\",\"lcwG1\",\"idle_1.ef0200ed.png\",\"a93x8\",\"idle_2.4194aeac.png\",\"8D5Z7\",\"idle_3.3dc0e879.png\",\"bsldS\",\"run_1.6472e175.png\",\"dd9o1\",\"run_2.c4968a6b.png\",\"n3GMK\",\"run_3.efff6a40.png\",\"6WPgJ\",\"run_4.d377bdf3.png\",\"8axzb\",\"angler1.8efa57e4.png\",\"c4s31\",\"Idle (1).cd81fc4c.png\",\"hIZuy\",\"idle.c183103c.png\",\"h2MAb\",\"idle1.eaa0a694.png\",\"4Zepu\",\"smokeExplosion.f72e891c.png\",\"7jPbZ\",\"fireExplosion.5dc59534.png\"]'));\n\nvar $bbfd42c14a1d8b99$exports = {};\n$bbfd42c14a1d8b99$exports = new URL(\"platform.11c76040.png\", import.meta.url).toString();\n\n\nconst $3940de47cfa7314f$export$2c9a6d1027132519 = innerWidth;\nconst $3940de47cfa7314f$export$aeb116877fd5ad06 = innerHeight;\nconst $3940de47cfa7314f$export$9c83558f29ac851e = 1.5;\n\n\n/**\n * animation for our sprite\n *\n */ \nfunction $a6df9c40ba402dc9$export$ec664d7487540b(imageSrc) {\n    const image = new Image();\n    image.src = imageSrc;\n    return image;\n}\nfunction $a6df9c40ba402dc9$export$65cbfae5bde8bfd2(rect1, rect2) {\n    return rect1.position.x < rect2.position.x + rect2.width && rect1.position.x + rect1.width > rect2.position.x && rect1.position.y < rect2.position.y + rect2.height && rect1.position.y + rect1.height > rect2.position.y;\n}\nfunction $a6df9c40ba402dc9$export$3203edd9e5edd663(time) {\n    return (time * 0.001).toFixed(0);\n}\nfunction $a6df9c40ba402dc9$export$eab19c48dcb6310d(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction $a6df9c40ba402dc9$export$e989c0fffaa6b27a(element) {\n    // Check if the enemy's position is within the visible part of the screen\n    return element.position.x + element.width > 0 && element.position.x < window.innerWidth && element.position.y + element.height > 0 && element.position.y < window.innerHeight;\n}\nconst $a6df9c40ba402dc9$export$7ef5126e1343a003 = [\n    {\n        x: -1,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    // Pank top\n    {\n        x: 400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    // platorm\n    {\n        x: 900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    // space\n    {\n        x: 1500,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 1800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 2100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 2400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 2700,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 3000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 3300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    // Elevation top\n    {\n        x: 3900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    // Elevation top\n    {\n        x: 4200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520\n    },\n    {\n        x: 4500,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520\n    },\n    {\n        x: 4800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520\n    },\n    {\n        x: 5100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520\n    },\n    {\n        x: 5400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520\n    },\n    {\n        x: 5700,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520\n    },\n    {\n        x: 6000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520\n    },\n    // Drop the player\n    {\n        x: 6300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 200\n    },\n    // Drop the player\n    {\n        x: 6700,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 7000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 7300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 7600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 7900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 8200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 8500,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    // Death pit\n    // Platform\n    {\n        x: 8800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 9100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 9400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 9700,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 10000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 10300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 10600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    // Elevation planks\n    {\n        x: 10600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 10600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 530\n    },\n    {\n        x: 10600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 740\n    },\n    {\n        x: 11200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 11200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 530\n    },\n    {\n        x: 11200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 740\n    },\n    // platforms\n    {\n        x: 10900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 11200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 11500,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 11800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 12100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    // Elevation\n    {\n        x: 12600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 12900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 13200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 13500,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 13800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 14100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 14400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 14700,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 15000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    {\n        x: 15300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330\n    },\n    // Drop the player\n    {\n        x: 15600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 16100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 16400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 16800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    // Death pit\n    // Platforms\n    {\n        x: 17100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 17500,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 17900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 18000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    {\n        x: 18300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100\n    },\n    // Elevation\n    {\n        x: 18700,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 19000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 19300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 19600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 19900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 20200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 20600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    },\n    {\n        x: 20900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320\n    }\n];\nconst $a6df9c40ba402dc9$export$12fa97fdd42eb2cf = [\n    {\n        x: 1000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 2100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 2720,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 4900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520 - 130\n    },\n    {\n        x: 5000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520 - 130\n    },\n    {\n        x: 5600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520 - 130\n    },\n    {\n        x: 7000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320 - 130\n    },\n    {\n        x: 8000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 8800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 9800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 10800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320 - 130\n    },\n    {\n        x: 10800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520 - 130\n    },\n    {\n        x: 10800,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 720 - 130\n    },\n    {\n        x: 10900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 11200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 12100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 16100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 16400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 17100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 18000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 130\n    },\n    {\n        x: 19000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320 - 130\n    },\n    {\n        x: 19300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320 - 130\n    }\n];\nconst $a6df9c40ba402dc9$export$9b14f7e6190811b1 = [\n    {\n        x: 4400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520 - 140\n    },\n    {\n        x: 4700,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 520 - 140\n    },\n    {\n        x: 7500,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 140\n    },\n    {\n        x: 9100,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 320 - 140\n    },\n    {\n        x: 9400,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 140\n    },\n    {\n        x: 11500,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 100 - 140\n    },\n    {\n        x: 12600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330 - 140\n    },\n    {\n        x: 13200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330 - 140\n    },\n    {\n        x: 15000,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330 - 140\n    },\n    {\n        x: 15300,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330 - 140\n    },\n    {\n        x: 12600,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330 - 140\n    },\n    {\n        x: 12900,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330 - 140\n    },\n    {\n        x: 13200,\n        y: (0, $3940de47cfa7314f$export$aeb116877fd5ad06) - 330 - 140\n    }\n];\n\n\nclass $cc6ed00b9533af27$var$SpriteAnimation {\n    images = [];\n    /**\n   *\n   * @param {string[]} arrayImage array of images frames\n   * @param {number} timerCount speed of frames\n   * @param {string} state current state of our animation\n   * @param {boolean} stopAtEnd should stop at end\n   */ constructor(arrayImage, timerCount, state, stopAtEnd){\n        for(let i = 0; i < arrayImage.length; i++){\n            const image = (0, $a6df9c40ba402dc9$export$ec664d7487540b)(arrayImage[i]);\n            this.images.push(image);\n        }\n        this.timerCount = timerCount;\n        this.timerCountDefault = this.timerCount;\n        this.imageIndex = 0;\n        this.state = state;\n        this.stopAtEnd = stopAtEnd;\n    }\n    /**\n   * check if the passed arguments matches with the current state\n   *\n   * @param {string} state current state of the frame\n   * @returns boolean\n   */ isFor(state) {\n        return this.state === state;\n    }\n    /**\n   * reset the image index\n   *\n   */ reset() {\n        this.imageIndex = 0;\n    }\n    /**\n   * get the current image index\n   *\n   * @returns string\n   */ getImage() {\n        this.setImageIndex();\n        return this.images[this.imageIndex];\n    }\n    /**\n   * sets the image index\n   */ setImageIndex() {\n        this.timerCount--;\n        if (this.timerCount <= 0 && !this.shouldStop()) {\n            this.timerCount = this.timerCountDefault;\n            this.imageIndex++;\n            if (this.imageIndex >= this.images.length) this.imageIndex = 0;\n        }\n    }\n    /**\n   * if the animation should stop\n   * @returns boolean\n   */ shouldStop() {\n        return this.stopAtEnd && this.imageIndex === this.images.length - 1;\n    }\n}\nvar $cc6ed00b9533af27$export$2e2bcd8739ae039 = $cc6ed00b9533af27$var$SpriteAnimation;\n\n\n\nclass $64fbb8abf9a7162d$var$Bullet {\n    /**\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   * @param {number} direction direction across teh x axis\n   * @param {boolean} verticalDirection if the bullet should go vertical\n   * @param {string} color color of the bullet\n   */ constructor({ x: x, y: y, direction: direction = 1, verticalDirection: verticalDirection = false, damage: damage = 5, color: color, speed: speed = 10 }){\n        this.position = {\n            x: x,\n            y: y\n        };\n        // speed of our bullet\n        this.speed = speed;\n        this.active = true;\n        this.damage = damage;\n        this.color = color;\n        this.width = 20;\n        this.height = 20;\n        this.direction = direction;\n        this.verticalDirection = verticalDirection;\n    }\n    /**\n   * update our bullet\n   *\n   * @param {CanvasRenderingContext2D} c context of our canvas\n   */ update(c) {\n        this.draw(c);\n        // dont go vertical direction\n        if (!this.verticalDirection) this.position.x += this.speed * this.direction;\n        else this.position.y -= this.speed;\n        // remove bullet if off canvas\n        if (this.position.x > (0, $3940de47cfa7314f$export$2c9a6d1027132519) || this.position.y > (0, $3940de47cfa7314f$export$aeb116877fd5ad06) || this.position.y < 0 || this.position.x < 0) this.active = false;\n    }\n    /**\n   * draw our bullet on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of our canvas\n   */ draw(c) {\n        c.beginPath();\n        c.arc(this.position.x + this.width, this.position.y, 8, 0, 2 * Math.PI);\n        c.fillStyle = this.color;\n        c.fill();\n    }\n}\nvar $64fbb8abf9a7162d$export$2e2bcd8739ae039 = $64fbb8abf9a7162d$var$Bullet;\n\n\nvar $62dad4a9f63439a6$exports = {};\n$62dad4a9f63439a6$exports = new URL(\"idle_1.ef0200ed.png\", import.meta.url).toString();\n\n\nvar $b22232e1f0ea40fe$exports = {};\n$b22232e1f0ea40fe$exports = new URL(\"idle_2.4194aeac.png\", import.meta.url).toString();\n\n\nvar $8a4adc73e6d47893$exports = {};\n$8a4adc73e6d47893$exports = new URL(\"idle_3.3dc0e879.png\", import.meta.url).toString();\n\n\nvar $1b457602c9fc1e59$exports = {};\n$1b457602c9fc1e59$exports = new URL(\"run_1.6472e175.png\", import.meta.url).toString();\n\n\nvar $3273fc7ec8430bb1$exports = {};\n$3273fc7ec8430bb1$exports = new URL(\"run_2.c4968a6b.png\", import.meta.url).toString();\n\n\nvar $99e7829adffeb0d3$exports = {};\n$99e7829adffeb0d3$exports = new URL(\"run_3.efff6a40.png\", import.meta.url).toString();\n\n\nvar $03e20da2eabbf420$exports = {};\n$03e20da2eabbf420$exports = new URL(\"run_4.d377bdf3.png\", import.meta.url).toString();\n\n\n/**\n * states of our entities in the game\n *\n */ const $eb8890fb01482c15$export$7a6d5a73795e8502 = {\n    idle: \"idle\"\n};\nconst $eb8890fb01482c15$export$1a8cecfb14a1e9b3 = {\n    idle: \"idle\"\n};\nconst $eb8890fb01482c15$export$f9624cc0e9ef9307 = {\n    idle: \"idle\"\n};\nconst $eb8890fb01482c15$export$35ee99e056842174 = {\n    idle: \"idle\",\n    run: \"run\"\n};\n\n\nclass $3f59ce11cca20e4f$var$Player {\n    /**\n   * define positions, dimension, characterisitics\n   * for our player\n   */ constructor(){\n        this.position = {\n            x: 100,\n            y: 100\n        };\n        this.velocity = {\n            x: 0,\n            y: 0\n        };\n        this.width = 100;\n        this.height = 100;\n        this.speed = 10;\n        this.frames = 0;\n        this.bullets = [];\n        // bullet cooldown\n        this.cooldown = 500;\n        this.lastShotTime = 0;\n        // player current state\n        this.state = (0, $eb8890fb01482c15$export$35ee99e056842174).idle;\n        this.direction = 1; // shoot right - either 1 or -1\n        this.verticalDirection = false;\n        this.isJumping = false;\n        this.health = 400;\n        this.createAnimations(); // run animation\n    }\n    /**\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */ draw(c) {\n        const animation = this.animations.find((animation)=>{\n            return animation.isFor(this.state);\n        });\n        const image = animation.getImage();\n        c.save(); // Save the current transformation state\n        if (this.direction === -1) // Flip the canvas horizontally if the player is facing left\n        c.scale(-1, 1);\n        c.drawImage(image, this.direction === -1 ? -this.position.x - this.width : this.position.x, this.position.y, this.width, this.height);\n        c.restore(); // Restore the transformation state\n    }\n    /**\n   * update our player overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   * @param {number} currentTime current time\n   */ update(c, currentTime) {\n        this.frames++;\n        this.draw(c);\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n        // Apply gravity effect\n        if (this.position.y + this.height + this.velocity.y <= (0, $3940de47cfa7314f$export$aeb116877fd5ad06)) this.velocity.y += (0, $3940de47cfa7314f$export$9c83558f29ac851e);\n        // handle bullet updates\n        // Update the bullets and check cooldown\n        this.bullets.forEach((bullet)=>bullet.update(c));\n        this.bullets = this.bullets.filter((bullet)=>bullet.active);\n        // Check cooldown before allowing a new bullet to be shot\n        const timeSinceLastShot = currentTime - this.lastShotTime;\n        if (timeSinceLastShot >= this.cooldown) // Allow shooting\n        this.canShoot = true;\n        else // Cooldown still active, cannot shoot\n        this.canShoot = false;\n    }\n    /**\n   * shooting mechanism for our player\n   *\n   * @param {number} currentTime current time\n   */ shootTop(currentTime) {\n        if (this.canShoot) {\n            let x, y;\n            if (this.direction === -1) x = this.position.x;\n            else x = this.position.x + this.width;\n            if (this.verticalDirection) {\n                x = this.position.x + this.width / 4;\n                y = this.position.y;\n            } else y = this.position.y + this.height / 2;\n            this.bullets.push(new (0, $64fbb8abf9a7162d$export$2e2bcd8739ae039)({\n                x: x,\n                y: y,\n                direction: this.direction,\n                verticalDirection: this.verticalDirection,\n                damage: 100,\n                color: \"pink\",\n                speed: 20\n            }));\n            this.lastShotTime = currentTime;\n            // Set canShoot to false to enforce cooldown\n            this.canShoot = false;\n        }\n    }\n    /**\n   * Create the animation frames\n   *\n   */ createAnimations = ()=>{\n        this.idleAnimation = new (0, $cc6ed00b9533af27$export$2e2bcd8739ae039)([\n            (0, (/*@__PURE__*/$parcel$interopDefault($62dad4a9f63439a6$exports))),\n            (0, (/*@__PURE__*/$parcel$interopDefault($b22232e1f0ea40fe$exports))),\n            (0, (/*@__PURE__*/$parcel$interopDefault($8a4adc73e6d47893$exports))),\n            (0, (/*@__PURE__*/$parcel$interopDefault($8a4adc73e6d47893$exports)))\n        ], 8, (0, $eb8890fb01482c15$export$35ee99e056842174).idle);\n        this.runAnimation = new (0, $cc6ed00b9533af27$export$2e2bcd8739ae039)([\n            (0, (/*@__PURE__*/$parcel$interopDefault($1b457602c9fc1e59$exports))),\n            (0, (/*@__PURE__*/$parcel$interopDefault($3273fc7ec8430bb1$exports))),\n            (0, (/*@__PURE__*/$parcel$interopDefault($99e7829adffeb0d3$exports))),\n            (0, (/*@__PURE__*/$parcel$interopDefault($03e20da2eabbf420$exports)))\n        ], 8, (0, $eb8890fb01482c15$export$35ee99e056842174).run);\n        this.animations = [\n            this.idleAnimation,\n            this.runAnimation\n        ];\n    };\n}\nvar $3f59ce11cca20e4f$export$2e2bcd8739ae039 = $3f59ce11cca20e4f$var$Player;\n\n\n\n/**\n * Our platforms in the game\n *\n */ class $4aa097c084906c8e$var$Platform {\n    /**\n   * dimenison of our platform\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   */ constructor({ x: x, y: y, image: image }){\n        this.position = {\n            x: x,\n            y: y\n        };\n        this.image = image;\n        this.width = 400;\n        this.height = 100;\n    }\n    /**\n   * draw image on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */ draw(c) {\n        c.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\n    }\n}\nvar $4aa097c084906c8e$export$2e2bcd8739ae039 = $4aa097c084906c8e$var$Platform;\n\n\n\n\nvar $04e8d882d3ba9d2d$exports = {};\n$04e8d882d3ba9d2d$exports = new URL(\"angler1.8efa57e4.png\", import.meta.url).toString();\n\n\n\n\n\nvar $0b4ac7c6ed41d1ce$exports = {};\n$0b4ac7c6ed41d1ce$exports = new URL(\"Idle (1).cd81fc4c.png\", import.meta.url).toString();\n\n\nvar $4ea9126f95a08acd$exports = {};\n$4ea9126f95a08acd$exports = new URL(\"idle.c183103c.png\", import.meta.url).toString();\n\n\nvar $085935adf2d7a772$exports = {};\n$085935adf2d7a772$exports = new URL(\"idle1.eaa0a694.png\", import.meta.url).toString();\n\n\n/**\n * Manage audio in our game\n *\n */ class $abc2d41911444a16$var$Audio {\n    /**\n   * get the audio DOM\n   *\n   */ constructor(){\n        this.backgroundMusic = document.querySelector(\"#bg-music\");\n        this.shootSound = document.querySelector(\"#shoot-music\");\n        this.zombieSound = document.querySelector(\"#zombie-music\");\n        this.enemyDeadSound = document.querySelector(\"#enemy-dead-music\");\n        this.heliMusic = document.querySelector(\"#heli-music\");\n    // Add more audio elements for other sounds as needed\n    }\n    /**\n   * play bg music\n   *\n   */ playBackgroundMusic() {\n        this.backgroundMusic.play();\n    }\n    /**\n   * stop bg music\n   *\n   */ stopBackgroundMusic() {\n        this.backgroundMusic.pause();\n    }\n    /**\n   * play shoot sound\n   *\n   */ playShootSound() {\n        this.shootSound.play();\n    }\n    /**\n   * play zombie sound\n   *\n   */ playZombieSound() {\n        this.zombieSound.play();\n    }\n    /**\n   * play heli sound\n   *\n   */ playHeliSound = ()=>{\n        this.heliMusic.play();\n    };\n}\nvar $abc2d41911444a16$export$2e2bcd8739ae039 = $abc2d41911444a16$var$Audio;\n\n\nclass $52804e1fc77d051f$var$Enemy {\n    /**\n   * base class for our enemy\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */ constructor({ x: x, y: y }){\n        this.position = {\n            x: x,\n            y: y\n        };\n        this.active = true;\n        this.direction = -1;\n        // audio for the enemy\n        this.audio = new (0, $abc2d41911444a16$export$2e2bcd8739ae039)();\n    }\n    /**\n   * draw enemy on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   * @returns undefined\n   */ draw(c) {\n        if (!c) return;\n    }\n}\nclass $52804e1fc77d051f$export$8ee8616438d9455 extends $52804e1fc77d051f$var$Enemy {\n    /**\n   * Angler 1 enemy\n   * This enemy can fly and arrives at\n   * random intervals. Probably one of the strongest enemy\n   * in our game\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */ constructor({ x: x, y: y }){\n        super({\n            x: x,\n            y: y\n        });\n        this.health = 100;\n        this.speedX = Math.random() * -4.5 - 1.5;\n        this.speed = 10;\n        // initialize frame\n        this.frameX = 0;\n        this.frameY = 0;\n        this.maxFrame = 37;\n        // create image for our angler1\n        this.image = (0, $a6df9c40ba402dc9$export$ec664d7487540b)((0, (/*@__PURE__*/$parcel$interopDefault($04e8d882d3ba9d2d$exports))));\n        this.frame = (0, $a6df9c40ba402dc9$export$eab19c48dcb6310d)(0, 2);\n        this.width = 228;\n        this.height = 169;\n        this.score = 15;\n    }\n    /**\n   * draw enemy on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */ draw(c) {\n        super.draw(c);\n        c.drawImage(this.image, this.frameX * this.width, this.frameY * this.height, this.width, this.height, this.position.x, this.position.y, this.width, this.height);\n    }\n    /**\n   * update our angler1 overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   */ update(c) {\n        this.draw(c);\n        this.position.x += this.speedX;\n        if (this.position.x + this.width < 0) this.active = false;\n        // Sprite animation\n        if (this.frameX < this.maxFrame) this.frameX++;\n        else this.frameX = 0;\n    }\n}\nclass $52804e1fc77d051f$export$88a18b8cd3b1bce4 extends $52804e1fc77d051f$var$Enemy {\n    /**\n   * troop enemy\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */ constructor({ x: x, y: y }){\n        super({\n            x: x,\n            y: y\n        });\n        // width and height of our troop\n        this.width = 240;\n        this.height = 160;\n        this.active = true;\n        this.speed = 10;\n        this.bullets = [];\n        this.cooldown = 2000; // Set the initial cooldown time (in milliseconds)\n        this.lastShotTime = 0; // Record the time of the last shot\n        this.health = 100;\n        this.score = 5;\n    }\n    /**\n   * draw enemy on the canvas\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   */ draw(c) {\n        c.drawImage((0, $a6df9c40ba402dc9$export$ec664d7487540b)((0, (/*@__PURE__*/$parcel$interopDefault($085935adf2d7a772$exports)))), this.position.x, this.position.y, this.width, this.height);\n    }\n    /**\n   * update enemy overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   * @param {number} currentTime current time\n   */ update(c, currentTime) {\n        this.draw(c);\n        this.handleShooting(currentTime);\n        // Handle bullet updates\n        this.bullets.forEach((bullet)=>bullet.update(c));\n        this.bullets = this.bullets.filter((bullet)=>bullet.active);\n    }\n    /**\n   * handle the shooting logic of our enemy\n   *\n   * @param {number} currentTime current time\n   */ handleShooting(currentTime) {\n        // Check if enough time has passed since the last shot\n        if (currentTime - this.lastShotTime > this.cooldown && (0, $a6df9c40ba402dc9$export$e989c0fffaa6b27a)(this)) {\n            this.state = (0, $eb8890fb01482c15$export$f9624cc0e9ef9307).attack; // Update the state to \"attack\"\n            this.shoot();\n            this.audio.playShootSound();\n            this.lastShotTime = currentTime; // Update the last shot time\n        } else this.state = (0, $eb8890fb01482c15$export$f9624cc0e9ef9307).idle; // Set the state to \"idle\" when not shooting\n    }\n    /**\n   * shoot mechanism for our enemy\n   *\n   */ shoot() {\n        this.bullets.push(new (0, $64fbb8abf9a7162d$export$2e2bcd8739ae039)({\n            x: this.position.x,\n            y: this.position.y + this.height / 2,\n            direction: this.direction,\n            damage: 5,\n            color: \"red\"\n        }));\n    }\n}\nclass $52804e1fc77d051f$export$6e8a1450080785fb extends $52804e1fc77d051f$var$Enemy {\n    /**\n   * zombie enemy\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */ constructor({ x: x, y: y }){\n        super({\n            x: x,\n            y: y\n        });\n        this.width = 140;\n        this.height = 140;\n        this.active = true;\n        this.speed = 10;\n        this.health = 100;\n        this.score = 5;\n    }\n    /**\n   * draw enemy on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */ draw(c) {\n        c.drawImage((0, $a6df9c40ba402dc9$export$ec664d7487540b)((0, (/*@__PURE__*/$parcel$interopDefault($0b4ac7c6ed41d1ce$exports)))), this.position.x, this.position.y, this.width, this.height);\n    }\n    /**\n   * update enemy overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   */ update(c) {\n        this.draw(c);\n        if (this.position.y + this.height < (0, $3940de47cfa7314f$export$aeb116877fd5ad06)) this.position.y += (0, $3940de47cfa7314f$export$9c83558f29ac851e) + 2;\n    }\n}\nclass $52804e1fc77d051f$export$eba177f38926edac extends $52804e1fc77d051f$var$Enemy {\n    /**\n   * Tower enemy\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */ constructor({ x: x, y: y }){\n        super({\n            x: x,\n            y: y\n        });\n        this.width = 100;\n        this.height = 140;\n        this.active = true;\n        this.speed = 10;\n        this.bullets = [];\n        this.cooldown = 2000; // Set the initial cooldown time (in milliseconds)\n        this.lastShotTime = 0; // Record the time of the last shot\n        this.health = 120;\n        this.score = 10;\n    }\n    /**\n   * draw our enemy on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */ draw(c) {\n        c.drawImage((0, $a6df9c40ba402dc9$export$ec664d7487540b)((0, (/*@__PURE__*/$parcel$interopDefault($4ea9126f95a08acd$exports)))), this.position.x, this.position.y, this.width, this.height);\n    }\n    /**\n   * update enemy overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   * @param {number} currentTime current time\n   */ update(c, currentTime) {\n        this.draw(c);\n        this.handleShooting(currentTime);\n        // Handle bullet updates\n        this.bullets.forEach((bullet)=>bullet.update(c));\n        this.bullets = this.bullets.filter((bullet)=>bullet.active);\n    }\n    /**\n   * handle the shooting logic of our enemy\n   *\n   * @param {number} currentTime current time\n   */ handleShooting(currentTime) {\n        // Check if enough time has passed since the last shot\n        if (currentTime - this.lastShotTime > this.cooldown && (0, $a6df9c40ba402dc9$export$e989c0fffaa6b27a)(this)) {\n            this.audio.playShootSound();\n            this.shoot();\n            this.lastShotTime = currentTime; // Update the last shot time\n        }\n    }\n    /**\n   * shoot mechanism for our troop\n   */ shoot() {\n        this.bullets.push(new (0, $64fbb8abf9a7162d$export$2e2bcd8739ae039)({\n            x: this.position.x + this.width,\n            y: this.position.y + this.height / 2,\n            direction: this.direction,\n            damage: 5,\n            color: \"red\"\n        }));\n    }\n}\n\n\n\nvar $565a2039ed45c93c$exports = {};\n$565a2039ed45c93c$exports = new URL(\"smokeExplosion.f72e891c.png\", import.meta.url).toString();\n\n\nvar $07cab4aed66d5686$exports = {};\n$07cab4aed66d5686$exports = new URL(\"fireExplosion.5dc59534.png\", import.meta.url).toString();\n\n\nclass $bd84c1f579e4afac$var$Explosion {\n    /**\n   * dimension of our explosion\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   */ constructor({ x: x, y: y }){\n        this.position = {\n            x: x,\n            y: y\n        };\n        // frames for our explosion\n        this.frameX = 0;\n        this.fps = 15;\n        this.maxFrame = 8;\n        this.spriteHeight = 200;\n        this.timer = 0;\n        this.interval = 1000 / this.fps;\n        this.active = true;\n    }\n    /**\n   * update our canvas overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   * @param {number} deltatime delta time\n   */ update(c, deltatime) {\n        this.draw(c);\n        if (this.timer > this.interval) {\n            this.frameX++;\n            this.timer = 0;\n        } else this.timer += deltatime;\n        // if exceeds the frame deactivate\n        if (this.frameX > this.maxFrame) this.active = false;\n    }\n    /**\n   * draw image on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx canvas\n   */ draw = (c)=>{\n        c.drawImage(this.image, this.frameX * this.spriteWidth, 0, this.spriteWidth, this.spriteHeight, this.position.x, this.position.y, this.width, this.height);\n    };\n}\nclass $bd84c1f579e4afac$export$2e80534920b24a5 extends $bd84c1f579e4afac$var$Explosion {\n    /**\n   * dimension of our smoke explosion\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   */ constructor({ x: x, y: y }){\n        super({\n            x: x,\n            y: y\n        });\n        this.image = (0, $a6df9c40ba402dc9$export$ec664d7487540b)((0, (/*@__PURE__*/$parcel$interopDefault($565a2039ed45c93c$exports))));\n        this.spriteWidth = 200;\n        this.width = this.spriteWidth;\n        this.height = this.spriteHeight;\n        this.x = x - this.width * 0.5;\n        this.y = y - this.height * 0.5;\n    }\n}\nclass $bd84c1f579e4afac$export$718daf669a03dd21 extends $bd84c1f579e4afac$var$Explosion {\n    /**\n   * dimension of our fire explosion\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   */ constructor({ x: x, y: y }){\n        super({\n            x: x,\n            y: y\n        });\n        this.image = (0, $a6df9c40ba402dc9$export$ec664d7487540b)((0, (/*@__PURE__*/$parcel$interopDefault($07cab4aed66d5686$exports))));\n        this.spriteWidth = 200;\n        this.width = this.spriteWidth;\n        this.height = this.spriteHeight;\n        this.x = x - this.width * 0.5;\n        this.y = y - this.height * 0.5;\n    }\n}\n\n\n\n\n// Get canvas and canvas object\nconst $a739d26eedb5c47f$var$canvas = document.querySelector(\"canvas\");\nconst $a739d26eedb5c47f$var$c = $a739d26eedb5c47f$var$canvas.getContext(\"2d\");\n$a739d26eedb5c47f$var$canvas.width = (0, $3940de47cfa7314f$export$2c9a6d1027132519);\n$a739d26eedb5c47f$var$canvas.height = (0, $3940de47cfa7314f$export$aeb116877fd5ad06);\n// track key strokes\nlet $a739d26eedb5c47f$var$keys = {\n    right: {\n        pressed: false\n    },\n    left: {\n        pressed: false\n    }\n};\nlet $a739d26eedb5c47f$var$lastTime = 0;\nclass $a739d26eedb5c47f$var$Game {\n    /**\n   * Initialize our game by\n   * generating platforms, enemies,\n   * setting up event listeners, and tracking states\n   * in our game\n   *\n   */ constructor(){\n        this.player = new (0, $3f59ce11cca20e4f$export$2e2bcd8739ae039)();\n        this.platforms = [];\n        this.enemies = [];\n        // generate entities\n        this.generatePlatforms();\n        this.generateTroops();\n        this.generateTowers();\n        // setup listener\n        this.setupEventListener();\n        // Game variables\n        this.scrollOffset = 0;\n        this.enemyInterval = 1000;\n        this.gameOver = false;\n        this.score = 0;\n        this.maxMoved = 0;\n        this.gameTime = 0;\n        this.lives = 3;\n        this.explosions = [];\n        this.enemySpawnIntervalId = null;\n        this.texts = {\n            waveIncomingText: false,\n            startText: true\n        };\n        setTimeout(()=>{\n            this.texts.startText = false;\n        }, 2000);\n        this.audio = new (0, $abc2d41911444a16$export$2e2bcd8739ae039)();\n        this.audio.playBackgroundMusic();\n        this.isPaused = false;\n    }\n    /**\n   * Toggle game pause\n   *\n   */ togglePause() {\n        this.isPaused = !this.isPaused;\n        if (this.isPaused) this.pauseGame();\n        else this.resumeGame();\n    }\n    /**\n   * pause the game\n   */ pauseGame() {\n        clearInterval(this.enemySpawnIntervalId);\n        this.audio.stopBackgroundMusic();\n    }\n    /**\n   * resume the game by resetting the enemy varaible\n   *\n   */ resumeGame() {\n        this.enemySpawnIntervalId = setInterval(()=>{\n            const chance = Math.random() < 0.4;\n            for(let i = 0; i < 10; i++)if (chance) this.addZombie(i);\n            else this.addAngler1();\n        }, 1000 * (this.scrollOffset > 18500 ? 5 : 10));\n        this.audio.playBackgroundMusic();\n    }\n    /**\n   * generate platforms in our game\n   *\n   */ generatePlatforms = ()=>{\n        (0, $a6df9c40ba402dc9$export$7ef5126e1343a003).forEach((position)=>{\n            this.platforms.push(new (0, $4aa097c084906c8e$export$2e2bcd8739ae039)({\n                x: position.x,\n                y: position.y,\n                image: (0, $a6df9c40ba402dc9$export$ec664d7487540b)((0, (/*@__PURE__*/$parcel$interopDefault($bbfd42c14a1d8b99$exports))))\n            }));\n        });\n    };\n    /**\n   * generate troops in our game\n   *\n   */ generateTroops = ()=>{\n        (0, $a6df9c40ba402dc9$export$12fa97fdd42eb2cf).forEach((enemy)=>{\n            this.enemies.push(new (0, $52804e1fc77d051f$export$88a18b8cd3b1bce4)({\n                x: enemy.x,\n                y: enemy.y\n            }));\n        });\n    };\n    /**\n   * add zombies into the game\n   * @param {number} i index of the zombie\n   */ addZombie = (i)=>{\n        let x, y;\n        if (this.scrollOffset > 19000) {\n            x = this.player.position.x + i * 40;\n            y = this.player.position.y + 40;\n        } else {\n            x = this.player.position.x + i * 100;\n            y = this.player.position.y + i * 100;\n        }\n        this.audio.playZombieSound();\n        this.enemies.push(new (0, $52804e1fc77d051f$export$6e8a1450080785fb)({\n            x: x,\n            y: y\n        }));\n    };\n    /**\n   * Generate enemy towers\n   *\n   */ generateTowers = ()=>{\n        (0, $a6df9c40ba402dc9$export$9b14f7e6190811b1).forEach((enemy)=>{\n            this.enemies.push(new (0, $52804e1fc77d051f$export$eba177f38926edac)({\n                x: enemy.x,\n                y: enemy.y\n            }));\n        });\n    };\n    /**\n   * move the platform as player moves through\n   * the platform\n   *\n   * @returns undefined\n   */ handlePlatformMovement = ()=>{\n        if ($a739d26eedb5c47f$var$keys.right.pressed && this.scrollOffset >= 19500) return;\n        if ($a739d26eedb5c47f$var$keys.right.pressed && this.player.position.x < 400) this.player.velocity.x = this.player.speed;\n        else if ($a739d26eedb5c47f$var$keys.left.pressed && this.player.position.x > 100 || $a739d26eedb5c47f$var$keys.left.pressed && this.scrollOffset === 0 && this.player.position.x > 0) this.player.velocity.x = -this.player.speed;\n        else {\n            this.player.velocity.x = 0;\n            if ($a739d26eedb5c47f$var$keys.right.pressed) {\n                this.scrollOffset += this.player.speed;\n                if (this.scrollOffset > this.maxMoved) this.maxMoved = this.scrollOffset;\n                if (this.maxMoved >= 18500) this.texts.waveIncomingText = true;\n                this.platforms.forEach((platform)=>platform.position.x -= this.player.speed);\n                this.enemies.forEach((enemy)=>enemy.position.x -= this.player.speed);\n            } else if ($a739d26eedb5c47f$var$keys.left.pressed && this.scrollOffset > 0) {\n                this.scrollOffset -= this.player.speed;\n                this.platforms.forEach((platform)=>platform.position.x += this.player.speed * 0.66);\n                this.enemies.forEach((enemy)=>enemy.position.x += this.player.speed * 0.66);\n            }\n        }\n    };\n    /**\n   * draw our game canvas\n   */ draw = ()=>{\n        // draw platforms\n        this.platforms.forEach((platform)=>{\n            platform.draw($a739d26eedb5c47f$var$c);\n        });\n        // show the statistics in oru game\n        this.showGameStats();\n        // Show enemy wave text\n        $a739d26eedb5c47f$var$c.save();\n        if (this.texts.waveIncomingText) this.displayMessage(\"Huge Wave Incoming!\", (0, $3940de47cfa7314f$export$2c9a6d1027132519) / 3.5, (0, $3940de47cfa7314f$export$aeb116877fd5ad06) / 2, 5000);\n        if (this.texts.startText) this.displayMessage(\"Go Player Go!\", (0, $3940de47cfa7314f$export$2c9a6d1027132519) / 3, (0, $3940de47cfa7314f$export$aeb116877fd5ad06) / 2, 5000);\n        $a739d26eedb5c47f$var$c.restore();\n    };\n    /**\n   * Show the game score and other metrics\n   *\n   */ showGameStats = ()=>{\n        $a739d26eedb5c47f$var$c.save();\n        // Score\n        $a739d26eedb5c47f$var$c.font = \"64px Metal Mania\";\n        $a739d26eedb5c47f$var$c.fillStyle = \"white\";\n        $a739d26eedb5c47f$var$c.shadowOffsetX = 4;\n        $a739d26eedb5c47f$var$c.shadowOffsetY = 4;\n        $a739d26eedb5c47f$var$c.shadowColor = \"black\";\n        $a739d26eedb5c47f$var$c.fillText(this.score.toString().padStart(4, \"0\"), (0, $3940de47cfa7314f$export$2c9a6d1027132519) - 140, 70);\n        $a739d26eedb5c47f$var$c.fillText(`Health: ${this.player.health}`, 20, 70);\n        $a739d26eedb5c47f$var$c.fillText(`Lives: ${this.lives}`, 20, 140);\n        // Game Time\n        $a739d26eedb5c47f$var$c.font = \"72px Metal Mania\";\n        $a739d26eedb5c47f$var$c.fillText((0, $a6df9c40ba402dc9$export$3203edd9e5edd663)(this.gameTime).padStart(3, \"0\"), (0, $3940de47cfa7314f$export$2c9a6d1027132519) / 2 - 36, 80);\n        $a739d26eedb5c47f$var$c.restore();\n    };\n    /**\n   * display the given message into our canvas\n   *\n   * @param {string} text message text\n   * @param {number} x x position\n   * @param {number} y y position\n   * @param {number} time timeout time\n   */ displayMessage = (text, x, y, time)=>{\n        $a739d26eedb5c47f$var$c.font = \"100px Metal Mania\";\n        $a739d26eedb5c47f$var$c.fillStyle = \"white\";\n        $a739d26eedb5c47f$var$c.shadowOffsetX = 4;\n        $a739d26eedb5c47f$var$c.shadowOffsetY = 4;\n        $a739d26eedb5c47f$var$c.shadowColor = \"black\";\n        $a739d26eedb5c47f$var$c.fillText(text, x, y);\n        $a739d26eedb5c47f$var$c.restore();\n        setTimeout(()=>{\n            this.clearMessage();\n            this.texts.waveIncomingText = false;\n        }, time);\n    };\n    /**\n   * clear the message from canvas\n   *\n   */ clearMessage = ()=>{\n        $a739d26eedb5c47f$var$c.clearRect(0, 0, (0, $3940de47cfa7314f$export$2c9a6d1027132519), (0, $3940de47cfa7314f$export$aeb116877fd5ad06));\n        this.draw();\n    };\n    /**\n   * update our canvas over time\n   *\n   * @param {number} deltatime delta time\n   */ update = (deltatime)=>{\n        if (!this.gameOver) this.gameTime += deltatime;\n        this.draw();\n        // update the player\n        this.player.update($a739d26eedb5c47f$var$c, Date.now());\n        // update the explosions\n        this.explosions.forEach((explosion)=>explosion.update($a739d26eedb5c47f$var$c, deltatime));\n        this.explosions = this.explosions.filter((explosion)=>explosion.active);\n        // update enemy and bullets\n        this.enemies.forEach((enemy)=>{\n            const currentTime = Date.now();\n            enemy.update($a739d26eedb5c47f$var$c, currentTime);\n            if ((0, $a6df9c40ba402dc9$export$65cbfae5bde8bfd2)(this.player, enemy)) this.player.health -= 5;\n            enemy?.bullets?.forEach((bullet)=>{\n                if ((0, $a6df9c40ba402dc9$export$65cbfae5bde8bfd2)(bullet, this.player)) {\n                    this.player.health -= bullet.damage;\n                    bullet.active = false;\n                }\n            });\n            // update player bullets\n            this.player.bullets.forEach((bullet)=>{\n                if ((0, $a6df9c40ba402dc9$export$65cbfae5bde8bfd2)(bullet, enemy)) {\n                    enemy.health -= bullet.damage;\n                    bullet.active = false;\n                    if (enemy.health <= 0) {\n                        enemy.active = false;\n                        this.addExplosion(enemy);\n                        if (!this.gameOver) this.score += enemy.score;\n                    }\n                }\n            });\n        });\n        // filter dead enemies\n        this.enemies = this.enemies.filter((enemy)=>enemy.active);\n        if (!this.gameOver) // Call addAngler1 every 5 seconds\n        {\n            if (!this.enemySpawnIntervalId) this.enemySpawnIntervalId = setInterval(()=>{\n                const chance = Math.random() < 0.4;\n                for(let i = 0; i < 10; i++)if (chance) this.addZombie(i);\n                else this.addAngler1();\n            }, 1000 * (this.scrollOffset > 18500 ? 5 : 10));\n        }\n        this.platformCollisionDetection();\n    };\n    /**\n   * listen to the keystrokes in our game\n   *\n   */ setupEventListener = ()=>{\n        let keysPressed = {};\n        // Handle keydown event\n        addEventListener(\"keydown\", ({ code: code })=>{\n            keysPressed[code] = true;\n            switch(code){\n                case \"ArrowLeft\":\n                    $a739d26eedb5c47f$var$keys.left.pressed = true;\n                    this.player.state = (0, $eb8890fb01482c15$export$35ee99e056842174).run;\n                    this.player.direction = -1;\n                    break;\n                case \"ArrowRight\":\n                    $a739d26eedb5c47f$var$keys.right.pressed = true;\n                    this.player.state = (0, $eb8890fb01482c15$export$35ee99e056842174).run;\n                    this.player.direction = 1;\n                    break;\n                case \"KeyZ\":\n                    break;\n                case \"KeyX\":\n                    if (!this.player.isJumping) {\n                        this.player.velocity.y -= 30;\n                        this.player.isJumping = true;\n                    }\n                    break;\n                case \"KeyP\":\n                    this.togglePause();\n                    break;\n            }\n        });\n        // Handle Keyup event\n        addEventListener(\"keyup\", ({ code: code })=>{\n            keysPressed[code] = false;\n            switch(code){\n                case \"ArrowLeft\":\n                    $a739d26eedb5c47f$var$keys.left.pressed = false;\n                    this.player.state = (0, $eb8890fb01482c15$export$35ee99e056842174).idle;\n                    break;\n                case \"ArrowRight\":\n                    $a739d26eedb5c47f$var$keys.right.pressed = false;\n                    this.player.state = (0, $eb8890fb01482c15$export$35ee99e056842174).idle;\n                    break;\n                case \"KeyX\":\n                    if (!this.player.isJumping) {\n                        this.player.velocity.y -= 30;\n                        this.player.isJumping = true;\n                    }\n                    break;\n                case \"KeyZ\":\n                    this.audio.playShootSound();\n                    if (keysPressed[\"ArrowUp\"]) this.player.verticalDirection = true;\n                    else this.player.verticalDirection = false;\n                    this.player.shootTop(Date.now()); // Pass the current time\n                    break;\n            }\n        });\n    };\n    /**\n   * detect collision between platform and player and\n   * the enemy\n   *\n   */ platformCollisionDetection = ()=>{\n        this.platforms.forEach((platform)=>{\n            // Vertical Collision\n            if (this.player.position.y + this.player.height <= platform.position.y && this.player.position.y + this.player.height + this.player.velocity.y >= platform.position.y && this.player.position.x + this.player.width >= platform.position.x && this.player.position.x <= platform.position.x + platform.width) {\n                this.player.velocity.y = 0;\n                this.player.isJumping = false;\n            }\n            // Horizontal Collision on the left side of the platform\n            if (this.player.position.y + this.player.height > platform.position.y && this.player.position.y < platform.position.y + platform.height && this.player.position.x < platform.position.x + platform.width && this.player.position.x + this.player.width > platform.position.x) {\n                this.player.velocity.x = 0;\n                this.player.position.x = platform.position.x - this.player.width;\n            }\n            // Horizontal Collision on the right side of the platform\n            if (this.player.position.y + this.player.height > platform.position.y && this.player.position.y < platform.position.y + platform.height && this.player.position.x < platform.position.x + platform.width && this.player.position.x + this.player.width > platform.position.x) {\n                this.player.velocity.x = 0;\n                this.player.position.x = platform.position.x + platform.width;\n            }\n            this.enemies.forEach((enemy)=>{\n                if ((0, $a6df9c40ba402dc9$export$65cbfae5bde8bfd2)(enemy, platform)) {\n                    if (enemy instanceof (0, $52804e1fc77d051f$export$6e8a1450080785fb)) enemy.position.y = platform.position.y - enemy.height;\n                }\n            });\n        });\n    };\n    /**\n   * handle win scenario\n   *\n   */ handleWin = ()=>{\n        if (this.player.score >= 5000) this.onGameOver();\n    };\n    /**\n   * reset our players life\n   *\n   */ resetLife = ()=>{\n        this.lives--;\n        this.player.health = 400;\n        this.player.position.x = 100;\n        this.player.position.y = 100;\n    };\n    /**\n   * handle lose scenario\n   *\n   */ handleLose = ()=>{\n        if (this.lives <= 0) {\n            this.gameOver = true;\n            clearInterval(this.enemySpawnIntervalId);\n            this.onGameOver();\n        }\n        // Player falls into the death pit\n        if (this.player.position.y > (0, $3940de47cfa7314f$export$aeb116877fd5ad06) || this.player.health <= 0) this.resetLife();\n    };\n    /**\n   *\n   * @param {number} timestamp\n   * @param {function} onGameOver handler when game is over\n   * @returns\n   */ animate = (timestamp, onGameOver)=>{\n        if (onGameOver) this.onGameOver = onGameOver;\n        if (this.isPaused) {\n            // If the game is paused, don't proceed with the animation\n            requestAnimationFrame(this.animate);\n            return;\n        }\n        const deltatime = timestamp - $a739d26eedb5c47f$var$lastTime;\n        $a739d26eedb5c47f$var$lastTime = timestamp;\n        requestAnimationFrame(this.animate);\n        $a739d26eedb5c47f$var$c.clearRect(0, 0, (0, $3940de47cfa7314f$export$2c9a6d1027132519), (0, $3940de47cfa7314f$export$aeb116877fd5ad06));\n        this.update(deltatime);\n        // Draw enemy\n        this.enemies.forEach((enemy)=>enemy.update($a739d26eedb5c47f$var$c));\n        this.enemies = this.enemies.filter((enemy)=>enemy.active);\n        this.handlePlatformMovement();\n        this.handleWin();\n        // Handle player loses\n        this.handleLose();\n        this.enemies.forEach((enemy)=>{\n            if (enemy.position.y + enemy.height > (0, $3940de47cfa7314f$export$aeb116877fd5ad06)) enemy.active = false;\n        });\n    };\n    /**\n   * Add angler enemy in our game\n   *\n   */ addAngler1 = ()=>{\n        this.audio.playHeliSound();\n        this.enemies.push(new (0, $52804e1fc77d051f$export$8ee8616438d9455)({\n            x: (0, $3940de47cfa7314f$export$2c9a6d1027132519),\n            y: this.player.position.y\n        }));\n    };\n    /**\n   * add the explosion effect\n   *\n   * @param {object} enemy our enemy object\n   */ addExplosion = (enemy)=>{\n        if (Math.random() < 0.6) // Smoke explosion\n        this.explosions.push(new (0, $bd84c1f579e4afac$export$2e80534920b24a5)({\n            x: enemy.position.x,\n            y: enemy.position.y - enemy.height / 2\n        }));\n        else // Fire explosion\n        this.explosions.push(new (0, $bd84c1f579e4afac$export$718daf669a03dd21)({\n            x: enemy.position.x,\n            y: enemy.position.y - enemy.height / 2\n        }));\n    };\n}\nvar $a739d26eedb5c47f$export$2e2bcd8739ae039 = $a739d26eedb5c47f$var$Game;\n\n\n// Load DOM\nconst $8f6a480bb40b134f$var$menuScreen = document.querySelector(\"#menu\");\nconst $8f6a480bb40b134f$var$gameOverScreen = document.querySelector(\"#over\");\nconst $8f6a480bb40b134f$var$canvasScreen = document.querySelector(\"canvas\");\nconst $8f6a480bb40b134f$var$playBtn = document.querySelector(\"#play-btn\");\n// Hide elements\n$8f6a480bb40b134f$var$canvasScreen.style.display = \"none\";\n$8f6a480bb40b134f$var$gameOverScreen.style.display = \"none\";\n/**\n * handle game over\n *\n */ function $8f6a480bb40b134f$var$handleGameOver() {\n    // Display the game over screen\n    $8f6a480bb40b134f$var$menuScreen.style.display = \"none\";\n    $8f6a480bb40b134f$var$canvasScreen.style.display = \"none\";\n    $8f6a480bb40b134f$var$gameOverScreen.style.display = \"flex\";\n}\n/**\n * handle play\n */ function $8f6a480bb40b134f$var$play() {\n    $8f6a480bb40b134f$var$menuScreen.style.display = \"none\";\n    $8f6a480bb40b134f$var$gameOverScreen.style.display = \"none\";\n    $8f6a480bb40b134f$var$canvasScreen.style.display = \"block\";\n    const game = new (0, $a739d26eedb5c47f$export$2e2bcd8739ae039)();\n    game.animate(0, $8f6a480bb40b134f$var$handleGameOver);\n}\n/**\n * add play event listeners\n */ addEventListener(\"keydown\", ({ code: code })=>{\n    if (code === \"Space\") $8f6a480bb40b134f$var$play();\n});\n$8f6a480bb40b134f$var$playBtn.addEventListener(\"click\", $8f6a480bb40b134f$var$play);\n\n\n//# sourceMappingURL=index.53ea7bc5.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"ioUUD\\\",\\\"index.53ea7bc5.js\\\",\\\"eUXST\\\",\\\"platform.11c76040.png\\\",\\\"lcwG1\\\",\\\"idle_1.ef0200ed.png\\\",\\\"a93x8\\\",\\\"idle_2.4194aeac.png\\\",\\\"8D5Z7\\\",\\\"idle_3.3dc0e879.png\\\",\\\"bsldS\\\",\\\"run_1.6472e175.png\\\",\\\"dd9o1\\\",\\\"run_2.c4968a6b.png\\\",\\\"n3GMK\\\",\\\"run_3.efff6a40.png\\\",\\\"6WPgJ\\\",\\\"run_4.d377bdf3.png\\\",\\\"8axzb\\\",\\\"angler1.8efa57e4.png\\\",\\\"c4s31\\\",\\\"Idle (1).cd81fc4c.png\\\",\\\"hIZuy\\\",\\\"idle.c183103c.png\\\",\\\"h2MAb\\\",\\\"idle1.eaa0a694.png\\\",\\\"4Zepu\\\",\\\"smokeExplosion.f72e891c.png\\\",\\\"7jPbZ\\\",\\\"fireExplosion.5dc59534.png\\\"]\"));","import Game from './Game';\n\n// Load DOM\nconst menuScreen = document.querySelector('#menu');\nconst gameOverScreen = document.querySelector('#over');\nconst canvasScreen = document.querySelector('canvas');\nconst playBtn = document.querySelector('#play-btn');\n\n// Hide elements\ncanvasScreen.style.display = 'none';\ngameOverScreen.style.display = 'none';\n\n/**\n * handle game over\n *\n */\nfunction handleGameOver() {\n  // Display the game over screen\n  menuScreen.style.display = 'none';\n  canvasScreen.style.display = 'none';\n  gameOverScreen.style.display = 'flex';\n}\n\n/**\n * handle play\n */\nfunction play() {\n  menuScreen.style.display = 'none';\n  gameOverScreen.style.display = 'none';\n  canvasScreen.style.display = 'block';\n  const game = new Game();\n  game.animate(0, handleGameOver);\n}\n\n/**\n * add play event listeners\n */\naddEventListener('keydown', ({ code }) => {\n  if (code === 'Space') {\n    play();\n  }\n});\n\nplayBtn.addEventListener('click', play);\n","import platform from '../assets/platform.png';\n\nimport Player from './entities/Player';\nimport {\n  checkCollision,\n  createImage,\n  formatTime,\n  platformPositions,\n  towerEnemies,\n  troopEnemies,\n} from './utils';\nimport Platform from './entities/Platform';\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from './constants';\nimport { Angler1, Tower, Troop, Zombie } from './entities/Enemy';\nimport { FireExplosion, SmokeExplosion } from './entities/Explosion';\nimport { playerStates } from './sprites/spriteStates';\nimport Audio from './Audio';\n\n// Get canvas and canvas object\nconst canvas = document.querySelector('canvas');\n\nconst c = canvas.getContext('2d');\n\ncanvas.width = CANVAS_WIDTH;\ncanvas.height = CANVAS_HEIGHT;\n\n// track key strokes\nlet keys = {\n  right: {\n    pressed: false,\n  },\n  left: {\n    pressed: false,\n  },\n};\n\nlet lastTime = 0;\n\nclass Game {\n  /**\n   * Initialize our game by\n   * generating platforms, enemies,\n   * setting up event listeners, and tracking states\n   * in our game\n   *\n   */\n  constructor() {\n    this.player = new Player();\n    this.platforms = [];\n    this.enemies = [];\n\n    // generate entities\n    this.generatePlatforms();\n    this.generateTroops();\n    this.generateTowers();\n\n    // setup listener\n    this.setupEventListener();\n\n    // Game variables\n    this.scrollOffset = 0;\n    this.enemyInterval = 1000;\n    this.gameOver = false;\n    this.score = 0;\n    this.maxMoved = 0;\n    this.gameTime = 0;\n    this.lives = 3;\n    this.explosions = [];\n    this.enemySpawnIntervalId = null;\n\n    this.texts = {\n      waveIncomingText: false,\n      startText: true,\n    };\n\n    setTimeout(() => {\n      this.texts.startText = false;\n    }, 2000);\n\n    this.audio = new Audio();\n    this.audio.playBackgroundMusic();\n\n    this.isPaused = false;\n  }\n\n  /**\n   * Toggle game pause\n   *\n   */\n  togglePause() {\n    this.isPaused = !this.isPaused;\n    if (this.isPaused) {\n      this.pauseGame();\n    } else {\n      this.resumeGame();\n    }\n  }\n\n  /**\n   * pause the game\n   */\n  pauseGame() {\n    clearInterval(this.enemySpawnIntervalId);\n    this.audio.stopBackgroundMusic();\n  }\n\n  /**\n   * resume the game by resetting the enemy varaible\n   *\n   */\n  resumeGame() {\n    this.enemySpawnIntervalId = setInterval(() => {\n      const chance = Math.random() < 0.4;\n      for (let i = 0; i < 10; i++) {\n        if (chance) this.addZombie(i);\n        else this.addAngler1();\n      }\n    }, 1000 * (this.scrollOffset > 18500 ? 5 : 10));\n\n    this.audio.playBackgroundMusic();\n  }\n\n  /**\n   * generate platforms in our game\n   *\n   */\n  generatePlatforms = () => {\n    platformPositions.forEach((position) => {\n      this.platforms.push(\n        new Platform({\n          x: position.x,\n          y: position.y,\n          image: createImage(platform),\n        })\n      );\n    });\n  };\n\n  /**\n   * generate troops in our game\n   *\n   */\n  generateTroops = () => {\n    troopEnemies.forEach((enemy) => {\n      this.enemies.push(\n        new Troop({\n          x: enemy.x,\n          y: enemy.y,\n        })\n      );\n    });\n  };\n\n  /**\n   * add zombies into the game\n   * @param {number} i index of the zombie\n   */\n  addZombie = (i) => {\n    let x, y;\n    if (this.scrollOffset > 19000) {\n      x = this.player.position.x + i * 40;\n      y = this.player.position.y + 40;\n    } else {\n      x = this.player.position.x + i * 100;\n      y = this.player.position.y + i * 100;\n    }\n    this.audio.playZombieSound();\n    this.enemies.push(\n      new Zombie({\n        x,\n        y,\n      })\n    );\n  };\n\n  /**\n   * Generate enemy towers\n   *\n   */\n  generateTowers = () => {\n    towerEnemies.forEach((enemy) => {\n      this.enemies.push(\n        new Tower({\n          x: enemy.x,\n          y: enemy.y,\n        })\n      );\n    });\n  };\n\n  /**\n   * move the platform as player moves through\n   * the platform\n   *\n   * @returns undefined\n   */\n  handlePlatformMovement = () => {\n    if (keys.right.pressed && this.scrollOffset >= 19500) {\n      return;\n    }\n\n    if (keys.right.pressed && this.player.position.x < 400) {\n      this.player.velocity.x = this.player.speed;\n    } else if (\n      (keys.left.pressed && this.player.position.x > 100) ||\n      (keys.left.pressed &&\n        this.scrollOffset === 0 &&\n        this.player.position.x > 0)\n    ) {\n      this.player.velocity.x = -this.player.speed;\n    } else {\n      this.player.velocity.x = 0;\n\n      if (keys.right.pressed) {\n        this.scrollOffset += this.player.speed;\n        if (this.scrollOffset > this.maxMoved)\n          this.maxMoved = this.scrollOffset;\n\n        if (this.maxMoved >= 18500)\n          this.texts.waveIncomingText = true;\n\n        this.platforms.forEach(\n          (platform) => (platform.position.x -= this.player.speed)\n        );\n        this.enemies.forEach(\n          (enemy) => (enemy.position.x -= this.player.speed)\n        );\n      } else if (keys.left.pressed && this.scrollOffset > 0) {\n        this.scrollOffset -= this.player.speed;\n        this.platforms.forEach(\n          (platform) =>\n            (platform.position.x += this.player.speed * 0.66)\n        );\n        this.enemies.forEach(\n          (enemy) => (enemy.position.x += this.player.speed * 0.66)\n        );\n      }\n    }\n  };\n\n  /**\n   * draw our game canvas\n   */\n  draw = () => {\n    // draw platforms\n    this.platforms.forEach((platform) => {\n      platform.draw(c);\n    });\n\n    // show the statistics in oru game\n    this.showGameStats();\n\n    // Show enemy wave text\n    c.save();\n    if (this.texts.waveIncomingText) {\n      this.displayMessage(\n        'Huge Wave Incoming!',\n        CANVAS_WIDTH / 3.5,\n        CANVAS_HEIGHT / 2,\n        5000\n      );\n    }\n\n    if (this.texts.startText) {\n      this.displayMessage(\n        'Go Player Go!',\n        CANVAS_WIDTH / 3,\n        CANVAS_HEIGHT / 2,\n        5000\n      );\n    }\n    c.restore();\n  };\n\n  /**\n   * Show the game score and other metrics\n   *\n   */\n  showGameStats = () => {\n    c.save();\n\n    // Score\n    c.font = '64px Metal Mania';\n    c.fillStyle = 'white';\n    c.shadowOffsetX = 4;\n    c.shadowOffsetY = 4;\n    c.shadowColor = 'black';\n\n    c.fillText(\n      this.score.toString().padStart(4, '0'),\n      CANVAS_WIDTH - 140,\n      70\n    );\n    c.fillText(`Health: ${this.player.health}`, 20, 70);\n    c.fillText(`Lives: ${this.lives}`, 20, 140);\n\n    // Game Time\n    c.font = '72px Metal Mania';\n    c.fillText(\n      formatTime(this.gameTime).padStart(3, '0'),\n      CANVAS_WIDTH / 2 - 36,\n      80\n    );\n\n    c.restore();\n  };\n\n  /**\n   * display the given message into our canvas\n   *\n   * @param {string} text message text\n   * @param {number} x x position\n   * @param {number} y y position\n   * @param {number} time timeout time\n   */\n  displayMessage = (text, x, y, time) => {\n    c.font = '100px Metal Mania';\n    c.fillStyle = 'white';\n    c.shadowOffsetX = 4;\n    c.shadowOffsetY = 4;\n    c.shadowColor = 'black';\n    c.fillText(text, x, y);\n    c.restore();\n\n    setTimeout(() => {\n      this.clearMessage();\n      this.texts.waveIncomingText = false;\n    }, time);\n  };\n\n  /**\n   * clear the message from canvas\n   *\n   */\n  clearMessage = () => {\n    c.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    this.draw();\n  };\n\n  /**\n   * update our canvas over time\n   *\n   * @param {number} deltatime delta time\n   */\n  update = (deltatime) => {\n    if (!this.gameOver) this.gameTime += deltatime;\n\n    this.draw();\n\n    // update the player\n    this.player.update(c, Date.now());\n\n    // update the explosions\n    this.explosions.forEach((explosion) =>\n      explosion.update(c, deltatime)\n    );\n    this.explosions = this.explosions.filter(\n      (explosion) => explosion.active\n    );\n\n    // update enemy and bullets\n    this.enemies.forEach((enemy) => {\n      const currentTime = Date.now();\n      enemy.update(c, currentTime);\n      if (checkCollision(this.player, enemy)) {\n        this.player.health -= 5;\n      }\n\n      enemy?.bullets?.forEach((bullet) => {\n        if (checkCollision(bullet, this.player)) {\n          this.player.health -= bullet.damage;\n          bullet.active = false;\n        }\n      });\n\n      // update player bullets\n      this.player.bullets.forEach((bullet) => {\n        if (checkCollision(bullet, enemy)) {\n          enemy.health -= bullet.damage;\n          bullet.active = false;\n\n          if (enemy.health <= 0) {\n            enemy.active = false;\n            this.addExplosion(enemy);\n            if (!this.gameOver) this.score += enemy.score;\n          }\n        }\n      });\n    });\n\n    // filter dead enemies\n    this.enemies = this.enemies.filter((enemy) => enemy.active);\n\n    if (!this.gameOver) {\n      // Call addAngler1 every 5 seconds\n      if (!this.enemySpawnIntervalId) {\n        this.enemySpawnIntervalId = setInterval(() => {\n          const chance = Math.random() < 0.4;\n          for (let i = 0; i < 10; i++) {\n            if (chance) this.addZombie(i);\n            else this.addAngler1();\n          }\n        }, 1000 * (this.scrollOffset > 18500 ? 5 : 10));\n      }\n    }\n\n    this.platformCollisionDetection();\n  };\n\n  /**\n   * listen to the keystrokes in our game\n   *\n   */\n  setupEventListener = () => {\n    let keysPressed = {};\n\n    // Handle keydown event\n    addEventListener('keydown', ({ code }) => {\n      keysPressed[code] = true;\n      switch (code) {\n        case 'ArrowLeft':\n          keys.left.pressed = true;\n          this.player.state = playerStates.run;\n          this.player.direction = -1;\n          break;\n\n        case 'ArrowRight':\n          keys.right.pressed = true;\n          this.player.state = playerStates.run;\n          this.player.direction = 1;\n\n          break;\n\n        case 'KeyZ':\n          break;\n\n        case 'KeyX':\n          if (!this.player.isJumping) {\n            this.player.velocity.y -= 30;\n            this.player.isJumping = true;\n          }\n          break;\n\n        case 'KeyP':\n          this.togglePause();\n          break;\n      }\n    });\n\n    // Handle Keyup event\n    addEventListener('keyup', ({ code }) => {\n      keysPressed[code] = false;\n\n      switch (code) {\n        case 'ArrowLeft':\n          keys.left.pressed = false;\n          this.player.state = playerStates.idle;\n          break;\n\n        case 'ArrowRight':\n          keys.right.pressed = false;\n          this.player.state = playerStates.idle;\n          break;\n\n        case 'KeyX':\n          if (!this.player.isJumping) {\n            this.player.velocity.y -= 30;\n            this.player.isJumping = true;\n          }\n          // this.player.velocity.y = 0;\n          break;\n\n        case 'KeyZ':\n          this.audio.playShootSound();\n          if (keysPressed['ArrowUp']) {\n            this.player.verticalDirection = true;\n          } else {\n            this.player.verticalDirection = false;\n          }\n          this.player.shootTop(Date.now()); // Pass the current time\n          break;\n      }\n    });\n  };\n\n  /**\n   * detect collision between platform and player and\n   * the enemy\n   *\n   */\n  platformCollisionDetection = () => {\n    this.platforms.forEach((platform) => {\n      // Vertical Collision\n      if (\n        this.player.position.y + this.player.height <=\n          platform.position.y &&\n        this.player.position.y +\n          this.player.height +\n          this.player.velocity.y >=\n          platform.position.y &&\n        this.player.position.x + this.player.width >=\n          platform.position.x &&\n        this.player.position.x <= platform.position.x + platform.width\n      ) {\n        this.player.velocity.y = 0;\n        this.player.isJumping = false;\n      }\n\n      // Horizontal Collision on the left side of the platform\n      if (\n        this.player.position.y + this.player.height >\n          platform.position.y &&\n        this.player.position.y <\n          platform.position.y + platform.height &&\n        this.player.position.x <\n          platform.position.x + platform.width &&\n        this.player.position.x + this.player.width >\n          platform.position.x\n      ) {\n        this.player.velocity.x = 0;\n        this.player.position.x =\n          platform.position.x - this.player.width;\n      }\n\n      // Horizontal Collision on the right side of the platform\n      if (\n        this.player.position.y + this.player.height >\n          platform.position.y &&\n        this.player.position.y <\n          platform.position.y + platform.height &&\n        this.player.position.x <\n          platform.position.x + platform.width &&\n        this.player.position.x + this.player.width >\n          platform.position.x\n      ) {\n        this.player.velocity.x = 0;\n        this.player.position.x = platform.position.x + platform.width;\n      }\n\n      this.enemies.forEach((enemy) => {\n        if (checkCollision(enemy, platform)) {\n          if (enemy instanceof Zombie)\n            enemy.position.y = platform.position.y - enemy.height;\n        }\n      });\n    });\n  };\n\n  /**\n   * handle win scenario\n   *\n   */\n  handleWin = () => {\n    if (this.player.score >= 5000) {\n      this.onGameOver();\n    }\n  };\n\n  /**\n   * reset our players life\n   *\n   */\n  resetLife = () => {\n    this.lives--;\n    this.player.health = 400;\n    this.player.position.x = 100;\n    this.player.position.y = 100;\n  };\n\n  /**\n   * handle lose scenario\n   *\n   */\n  handleLose = () => {\n    if (this.lives <= 0) {\n      this.gameOver = true;\n      clearInterval(this.enemySpawnIntervalId);\n\n      this.onGameOver();\n    }\n\n    // Player falls into the death pit\n    if (\n      this.player.position.y > CANVAS_HEIGHT ||\n      this.player.health <= 0\n    ) {\n      this.resetLife();\n    }\n  };\n\n  /**\n   *\n   * @param {number} timestamp\n   * @param {function} onGameOver handler when game is over\n   * @returns\n   */\n  animate = (timestamp, onGameOver) => {\n    if (onGameOver) {\n      this.onGameOver = onGameOver;\n    }\n\n    if (this.isPaused) {\n      // If the game is paused, don't proceed with the animation\n      requestAnimationFrame(this.animate);\n      return;\n    }\n    const deltatime = timestamp - lastTime;\n    lastTime = timestamp;\n    requestAnimationFrame(this.animate);\n    c.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    this.update(deltatime);\n\n    // Draw enemy\n    this.enemies.forEach((enemy) => enemy.update(c));\n\n    this.enemies = this.enemies.filter((enemy) => enemy.active);\n\n    this.handlePlatformMovement();\n\n    this.handleWin();\n\n    // Handle player loses\n    this.handleLose();\n\n    this.enemies.forEach((enemy) => {\n      if (enemy.position.y + enemy.height > CANVAS_HEIGHT) {\n        enemy.active = false;\n      }\n    });\n  };\n\n  /**\n   * Add angler enemy in our game\n   *\n   */\n  addAngler1 = () => {\n    this.audio.playHeliSound();\n    this.enemies.push(\n      new Angler1({\n        x: CANVAS_WIDTH,\n        y: this.player.position.y,\n      })\n    );\n  };\n\n  /**\n   * add the explosion effect\n   *\n   * @param {object} enemy our enemy object\n   */\n  addExplosion = (enemy) => {\n    if (Math.random() < 0.6) {\n      // Smoke explosion\n      this.explosions.push(\n        new SmokeExplosion({\n          x: enemy.position.x,\n          y: enemy.position.y - enemy.height / 2,\n        })\n      );\n    } else {\n      // Fire explosion\n      this.explosions.push(\n        new FireExplosion({\n          x: enemy.position.x,\n          y: enemy.position.y - enemy.height / 2,\n        })\n      );\n    }\n  };\n}\n\nexport default Game;\n","module.exports = new __parcel__URL__(\"platform.11c76040.png\").toString();","import { CANVAS_HEIGHT, GRAVITY } from '../constants';\n\nimport SpriteAnimation from '../sprites/SpriteAnimation';\nimport Bullet from './Bullet';\n\n// Load Sprite Images\nimport idle1 from '../../assets/hero/idle_1.png';\nimport idle2 from '../../assets/hero/idle_2.png';\nimport idle3 from '../../assets/hero/idle_3.png';\nimport idle4 from '../../assets/hero/idle_3.png';\n\nimport run1 from '../../assets/hero/run_1.png';\nimport run2 from '../../assets/hero/run_2.png';\nimport run3 from '../../assets/hero/run_3.png';\nimport run4 from '../../assets/hero/run_4.png';\nimport { playerStates } from '../sprites/spriteStates';\n\nclass Player {\n  /**\n   * define positions, dimension, characterisitics\n   * for our player\n   */\n  constructor() {\n    this.position = {\n      x: 100,\n      y: 100,\n    };\n    this.velocity = {\n      x: 0,\n      y: 0,\n    };\n    this.width = 100;\n    this.height = 100;\n    this.speed = 10;\n    this.frames = 0;\n    this.bullets = [];\n    // bullet cooldown\n    this.cooldown = 500;\n    this.lastShotTime = 0;\n    // player current state\n    this.state = playerStates.idle;\n    this.direction = 1; // shoot right - either 1 or -1\n    this.verticalDirection = false;\n    this.isJumping = false;\n    this.health = 400;\n\n    this.createAnimations(); // run animation\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */\n  draw(c) {\n    const animation = this.animations.find((animation) => {\n      return animation.isFor(this.state);\n    });\n\n    const image = animation.getImage();\n\n    c.save(); // Save the current transformation state\n\n    if (this.direction === -1) {\n      // Flip the canvas horizontally if the player is facing left\n      c.scale(-1, 1);\n    }\n\n    c.drawImage(\n      image,\n      this.direction === -1\n        ? -this.position.x - this.width\n        : this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n\n    c.restore(); // Restore the transformation state\n  }\n\n  /**\n   * update our player overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   * @param {number} currentTime current time\n   */\n  update(c, currentTime) {\n    this.frames++;\n\n    this.draw(c);\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n\n    // Apply gravity effect\n    if (\n      this.position.y + this.height + this.velocity.y <=\n      CANVAS_HEIGHT\n    ) {\n      this.velocity.y += GRAVITY;\n    }\n\n    // handle bullet updates\n    // Update the bullets and check cooldown\n    this.bullets.forEach((bullet) => bullet.update(c));\n    this.bullets = this.bullets.filter((bullet) => bullet.active);\n\n    // Check cooldown before allowing a new bullet to be shot\n    const timeSinceLastShot = currentTime - this.lastShotTime;\n    if (timeSinceLastShot >= this.cooldown) {\n      // Allow shooting\n      this.canShoot = true;\n    } else {\n      // Cooldown still active, cannot shoot\n      this.canShoot = false;\n    }\n  }\n\n  /**\n   * shooting mechanism for our player\n   *\n   * @param {number} currentTime current time\n   */\n  shootTop(currentTime) {\n    if (this.canShoot) {\n      let x, y;\n      if (this.direction === -1) {\n        x = this.position.x;\n      } else {\n        x = this.position.x + this.width;\n      }\n      if (this.verticalDirection) {\n        x = this.position.x + this.width / 4;\n        y = this.position.y;\n      } else {\n        y = this.position.y + this.height / 2;\n      }\n\n      this.bullets.push(\n        new Bullet({\n          x,\n          y,\n          direction: this.direction,\n          verticalDirection: this.verticalDirection,\n          damage: 100,\n          color: 'pink',\n          speed: 20,\n        })\n      );\n\n      this.lastShotTime = currentTime;\n\n      // Set canShoot to false to enforce cooldown\n      this.canShoot = false;\n    }\n  }\n\n  /**\n   * Create the animation frames\n   *\n   */\n  createAnimations = () => {\n    this.idleAnimation = new SpriteAnimation(\n      [idle1, idle2, idle3, idle4],\n      8,\n      playerStates.idle\n    );\n    this.runAnimation = new SpriteAnimation(\n      [run1, run2, run3, run4],\n      8,\n      playerStates.run\n    );\n\n    this.animations = [this.idleAnimation, this.runAnimation];\n  };\n}\n\nexport default Player;\n","export const CANVAS_WIDTH = innerWidth;\nexport const CANVAS_HEIGHT = innerHeight;\nexport const GRAVITY = 1.5;\n","/**\n * animation for our sprite\n *\n */\n\nimport { createImage } from '../utils';\n\nclass SpriteAnimation {\n  images = [];\n  /**\n   *\n   * @param {string[]} arrayImage array of images frames\n   * @param {number} timerCount speed of frames\n   * @param {string} state current state of our animation\n   * @param {boolean} stopAtEnd should stop at end\n   */\n  constructor(arrayImage, timerCount, state, stopAtEnd) {\n    for (let i = 0; i < arrayImage.length; i++) {\n      const image = createImage(arrayImage[i]);\n      this.images.push(image);\n    }\n    this.timerCount = timerCount;\n    this.timerCountDefault = this.timerCount;\n    this.imageIndex = 0;\n    this.state = state;\n    this.stopAtEnd = stopAtEnd;\n  }\n\n  /**\n   * check if the passed arguments matches with the current state\n   *\n   * @param {string} state current state of the frame\n   * @returns boolean\n   */\n  isFor(state) {\n    return this.state === state;\n  }\n\n  /**\n   * reset the image index\n   *\n   */\n  reset() {\n    this.imageIndex = 0;\n  }\n\n  /**\n   * get the current image index\n   *\n   * @returns string\n   */\n  getImage() {\n    this.setImageIndex();\n    return this.images[this.imageIndex];\n  }\n\n  /**\n   * sets the image index\n   */\n  setImageIndex() {\n    this.timerCount--;\n    if (this.timerCount <= 0 && !this.shouldStop()) {\n      this.timerCount = this.timerCountDefault;\n      this.imageIndex++;\n      if (this.imageIndex >= this.images.length) {\n        this.imageIndex = 0;\n      }\n    }\n  }\n\n  /**\n   * if the animation should stop\n   * @returns boolean\n   */\n  shouldStop() {\n    return (\n      this.stopAtEnd && this.imageIndex === this.images.length - 1\n    );\n  }\n}\n\nexport default SpriteAnimation;\n","import { CANVAS_HEIGHT } from './constants';\n\n/**\n * get Image HTMLDOM from the given img src\n *\n * @param {string} imageSrc src of the image\n * @returns HTMLImageElement\n */\nexport function createImage(imageSrc) {\n  const image = new Image();\n  image.src = imageSrc;\n  return image;\n}\n\n/**\n * check collision between two rectangles\n *\n * @param {object} rect1 object 1\n * @param {object} rect2 object 2\n * @returns boolean\n */\nexport function checkCollision(rect1, rect2) {\n  return (\n    rect1.position.x < rect2.position.x + rect2.width &&\n    rect1.position.x + rect1.width > rect2.position.x &&\n    rect1.position.y < rect2.position.y + rect2.height &&\n    rect1.position.y + rect1.height > rect2.position.y\n  );\n}\n\n/**\n * format the time\n *\n * @param {number} time\n * @returns number\n */\nexport function formatTime(time) {\n  return (time * 0.001).toFixed(0);\n}\n\n/**\n * get random number from min and max range\n *\n * @param {number} min min value\n * @param {number} max max value\n * @returns number\n */\nexport function getRandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * check if the element is visible on the canvas\n *\n * @param {object} element target element\n * @returns boolean\n */\nexport function isElementVisible(element) {\n  // Check if the enemy's position is within the visible part of the screen\n  return (\n    element.position.x + element.width > 0 &&\n    element.position.x < window.innerWidth &&\n    element.position.y + element.height > 0 &&\n    element.position.y < window.innerHeight\n  );\n}\n\n/**\n * platform positions\n */\nexport const platformPositions = [\n  { x: -1, y: CANVAS_HEIGHT - 100 },\n  { x: 300, y: CANVAS_HEIGHT - 100 },\n  { x: 600, y: CANVAS_HEIGHT - 100 },\n  // Pank top\n  { x: 400, y: CANVAS_HEIGHT - 320 },\n  // platorm\n  { x: 900, y: CANVAS_HEIGHT - 100 },\n  // space\n  { x: 1500, y: CANVAS_HEIGHT - 100 },\n  { x: 1800, y: CANVAS_HEIGHT - 100 },\n  { x: 2100, y: CANVAS_HEIGHT - 100 },\n  { x: 2400, y: CANVAS_HEIGHT - 100 },\n  { x: 2700, y: CANVAS_HEIGHT - 100 },\n  { x: 3000, y: CANVAS_HEIGHT - 100 },\n  { x: 3300, y: CANVAS_HEIGHT - 100 },\n  // Elevation top\n  { x: 3900, y: CANVAS_HEIGHT - 320 },\n  // Elevation top\n  { x: 4200, y: CANVAS_HEIGHT - 520 },\n  { x: 4500, y: CANVAS_HEIGHT - 520 },\n  { x: 4800, y: CANVAS_HEIGHT - 520 },\n  { x: 5100, y: CANVAS_HEIGHT - 520 },\n  { x: 5400, y: CANVAS_HEIGHT - 520 },\n  { x: 5700, y: CANVAS_HEIGHT - 520 },\n  { x: 6000, y: CANVAS_HEIGHT - 520 },\n  // Drop the player\n  { x: 6300, y: CANVAS_HEIGHT - 200 },\n  // Drop the player\n  { x: 6700, y: CANVAS_HEIGHT - 320 },\n  { x: 7000, y: CANVAS_HEIGHT - 100 },\n  { x: 7300, y: CANVAS_HEIGHT - 100 },\n  { x: 7600, y: CANVAS_HEIGHT - 100 },\n  { x: 7900, y: CANVAS_HEIGHT - 100 },\n  { x: 8200, y: CANVAS_HEIGHT - 100 },\n  { x: 8500, y: CANVAS_HEIGHT - 100 },\n  // Death pit\n  // Platform\n  { x: 8800, y: CANVAS_HEIGHT - 320 },\n  { x: 9100, y: CANVAS_HEIGHT - 100 },\n  { x: 9400, y: CANVAS_HEIGHT - 100 },\n  { x: 9700, y: CANVAS_HEIGHT - 100 },\n  { x: 10000, y: CANVAS_HEIGHT - 100 },\n  { x: 10300, y: CANVAS_HEIGHT - 100 },\n  { x: 10600, y: CANVAS_HEIGHT - 100 },\n\n  // Elevation planks\n  { x: 10600, y: CANVAS_HEIGHT - 320 },\n  { x: 10600, y: CANVAS_HEIGHT - 530 },\n  { x: 10600, y: CANVAS_HEIGHT - 740 },\n  { x: 11200, y: CANVAS_HEIGHT - 320 },\n  { x: 11200, y: CANVAS_HEIGHT - 530 },\n  { x: 11200, y: CANVAS_HEIGHT - 740 },\n\n  // platforms\n  { x: 10900, y: CANVAS_HEIGHT - 100 },\n  { x: 11200, y: CANVAS_HEIGHT - 100 },\n  { x: 11500, y: CANVAS_HEIGHT - 100 },\n  { x: 11800, y: CANVAS_HEIGHT - 100 },\n  { x: 12100, y: CANVAS_HEIGHT - 100 },\n\n  // Elevation\n  { x: 12600, y: CANVAS_HEIGHT - 330 },\n  { x: 12900, y: CANVAS_HEIGHT - 330 },\n  { x: 13200, y: CANVAS_HEIGHT - 330 },\n  { x: 13500, y: CANVAS_HEIGHT - 330 },\n  { x: 13800, y: CANVAS_HEIGHT - 330 },\n  { x: 14100, y: CANVAS_HEIGHT - 330 },\n  { x: 14400, y: CANVAS_HEIGHT - 330 },\n  { x: 14700, y: CANVAS_HEIGHT - 330 },\n  { x: 15000, y: CANVAS_HEIGHT - 330 },\n  { x: 15300, y: CANVAS_HEIGHT - 330 },\n\n  // Drop the player\n  { x: 15600, y: CANVAS_HEIGHT - 100 },\n  { x: 16100, y: CANVAS_HEIGHT - 100 },\n  { x: 16400, y: CANVAS_HEIGHT - 100 },\n  { x: 16800, y: CANVAS_HEIGHT - 100 },\n\n  // Death pit\n\n  // Platforms\n  { x: 17100, y: CANVAS_HEIGHT - 100 },\n  { x: 17500, y: CANVAS_HEIGHT - 100 },\n  { x: 17900, y: CANVAS_HEIGHT - 100 },\n  { x: 18000, y: CANVAS_HEIGHT - 100 },\n  { x: 18300, y: CANVAS_HEIGHT - 100 },\n\n  // Elevation\n  { x: 18700, y: CANVAS_HEIGHT - 320 },\n  { x: 19000, y: CANVAS_HEIGHT - 320 },\n  { x: 19300, y: CANVAS_HEIGHT - 320 },\n  { x: 19600, y: CANVAS_HEIGHT - 320 },\n  { x: 19900, y: CANVAS_HEIGHT - 320 },\n\n  { x: 20200, y: CANVAS_HEIGHT - 320 },\n  { x: 20600, y: CANVAS_HEIGHT - 320 },\n\n  { x: 20900, y: CANVAS_HEIGHT - 320 },\n];\n\n/**\n * troop positions\n *\n */\nexport const troopEnemies = [\n  { x: 1000, y: CANVAS_HEIGHT - 100 - 130 },\n  { x: 2100, y: CANVAS_HEIGHT - 100 - 130 },\n  { x: 2720, y: CANVAS_HEIGHT - 100 - 130 },\n\n  { x: 4900, y: CANVAS_HEIGHT - 520 - 130 },\n  { x: 5000, y: CANVAS_HEIGHT - 520 - 130 },\n  { x: 5600, y: CANVAS_HEIGHT - 520 - 130 },\n\n  { x: 7000, y: CANVAS_HEIGHT - 320 - 130 },\n  { x: 8000, y: CANVAS_HEIGHT - 100 - 130 },\n  { x: 8800, y: CANVAS_HEIGHT - 100 - 130 },\n  { x: 9800, y: CANVAS_HEIGHT - 100 - 130 },\n\n  { x: 10800, y: CANVAS_HEIGHT - 320 - 130 },\n  { x: 10800, y: CANVAS_HEIGHT - 520 - 130 },\n  { x: 10800, y: CANVAS_HEIGHT - 720 - 130 },\n\n  { x: 10900, y: CANVAS_HEIGHT - 100 - 130 },\n  { x: 11200, y: CANVAS_HEIGHT - 100 - 130 },\n  { x: 12100, y: CANVAS_HEIGHT - 100 - 130 },\n\n  { x: 16100, y: CANVAS_HEIGHT - 100 - 130 },\n  { x: 16400, y: CANVAS_HEIGHT - 100 - 130 },\n\n  { x: 17100, y: CANVAS_HEIGHT - 100 - 130 },\n  { x: 18000, y: CANVAS_HEIGHT - 100 - 130 },\n\n  { x: 19000, y: CANVAS_HEIGHT - 320 - 130 },\n  { x: 19300, y: CANVAS_HEIGHT - 320 - 130 },\n];\n\n/**\n * tower positions\n */\nexport const towerEnemies = [\n  { x: 4400, y: CANVAS_HEIGHT - 520 - 140 },\n  { x: 4700, y: CANVAS_HEIGHT - 520 - 140 },\n\n  { x: 7500, y: CANVAS_HEIGHT - 100 - 140 },\n\n  { x: 9100, y: CANVAS_HEIGHT - 320 - 140 },\n\n  { x: 9400, y: CANVAS_HEIGHT - 100 - 140 },\n\n  { x: 11500, y: CANVAS_HEIGHT - 100 - 140 },\n\n  { x: 12600, y: CANVAS_HEIGHT - 330 - 140 },\n  { x: 13200, y: CANVAS_HEIGHT - 330 - 140 },\n  { x: 15000, y: CANVAS_HEIGHT - 330 - 140 },\n  { x: 15300, y: CANVAS_HEIGHT - 330 - 140 },\n\n  { x: 12600, y: CANVAS_HEIGHT - 330 - 140 },\n  { x: 12900, y: CANVAS_HEIGHT - 330 - 140 },\n  { x: 13200, y: CANVAS_HEIGHT - 330 - 140 },\n];\n","import { CANVAS_HEIGHT, CANVAS_WIDTH } from '../constants';\n\nclass Bullet {\n  /**\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   * @param {number} direction direction across teh x axis\n   * @param {boolean} verticalDirection if the bullet should go vertical\n   * @param {string} color color of the bullet\n   */\n  constructor({\n    x,\n    y,\n    direction = 1,\n    verticalDirection = false,\n    damage = 5,\n    color,\n    speed = 10,\n  }) {\n    this.position = {\n      x,\n      y,\n    };\n    // speed of our bullet\n    this.speed = speed;\n\n    this.active = true;\n    this.damage = damage;\n    this.color = color;\n\n    this.width = 20;\n    this.height = 20;\n    this.direction = direction;\n    this.verticalDirection = verticalDirection;\n  }\n\n  /**\n   * update our bullet\n   *\n   * @param {CanvasRenderingContext2D} c context of our canvas\n   */\n  update(c) {\n    this.draw(c);\n    // dont go vertical direction\n    if (!this.verticalDirection)\n      this.position.x += this.speed * this.direction;\n    else this.position.y -= this.speed;\n    // remove bullet if off canvas\n    if (\n      this.position.x > CANVAS_WIDTH ||\n      this.position.y > CANVAS_HEIGHT ||\n      this.position.y < 0 ||\n      this.position.x < 0\n    )\n      this.active = false;\n  }\n\n  /**\n   * draw our bullet on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of our canvas\n   */\n  draw(c) {\n    c.beginPath();\n    c.arc(\n      this.position.x + this.width,\n      this.position.y,\n      8,\n      0,\n      2 * Math.PI\n    );\n    c.fillStyle = this.color;\n    c.fill();\n  }\n}\n\nexport default Bullet;\n","module.exports = new __parcel__URL__(\"idle_1.ef0200ed.png\").toString();","module.exports = new __parcel__URL__(\"idle_2.4194aeac.png\").toString();","module.exports = new __parcel__URL__(\"idle_3.3dc0e879.png\").toString();","module.exports = new __parcel__URL__(\"run_1.6472e175.png\").toString();","module.exports = new __parcel__URL__(\"run_2.c4968a6b.png\").toString();","module.exports = new __parcel__URL__(\"run_3.efff6a40.png\").toString();","module.exports = new __parcel__URL__(\"run_4.d377bdf3.png\").toString();","/**\n * states of our entities in the game\n *\n */\n\nexport const zombieStates = {\n  idle: 'idle',\n};\n\nexport const towerStates = {\n  idle: 'idle',\n};\n\nexport const troopStates = {\n  idle: 'idle',\n};\n\nexport const playerStates = {\n  idle: 'idle',\n  run: 'run',\n};\n","/**\n * Our platforms in the game\n *\n */\n\nclass Platform {\n  /**\n   * dimenison of our platform\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   */\n  constructor({ x, y, image }) {\n    this.position = {\n      x,\n      y,\n    };\n    this.image = image;\n    this.width = 400;\n    this.height = 100;\n  }\n\n  /**\n   * draw image on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */\n  draw(c) {\n    c.drawImage(\n      this.image,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n}\n\nexport default Platform;\n","import {\n  createImage,\n  getRandomNumber,\n  isElementVisible,\n} from '../utils';\nimport angler1 from '../../assets/angler1.png';\nimport Bullet from './Bullet';\nimport { CANVAS_HEIGHT, GRAVITY } from '../constants.js';\nimport { troopStates } from '../sprites/spriteStates.js';\n\nimport idleZombie1 from '../../assets/zombie/Idle (1).png';\n\nimport idleTower from '../../assets/tower/idle.png';\n\nimport idleTroop from '../../assets/troop/idle1.png';\nimport Audio from '../Audio.js';\n\nclass Enemy {\n  /**\n   * base class for our enemy\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */\n  constructor({ x, y }) {\n    this.position = {\n      x,\n      y,\n    };\n    this.active = true;\n    this.direction = -1;\n    // audio for the enemy\n    this.audio = new Audio();\n  }\n  /**\n   * draw enemy on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   * @returns undefined\n   */\n  draw(c) {\n    if (!c) return;\n  }\n}\n\nexport class Angler1 extends Enemy {\n  /**\n   * Angler 1 enemy\n   * This enemy can fly and arrives at\n   * random intervals. Probably one of the strongest enemy\n   * in our game\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */\n  constructor({ x, y }) {\n    super({ x, y });\n    this.health = 100;\n    this.speedX = Math.random() * -4.5 - 1.5;\n    this.speed = 10;\n    // initialize frame\n    this.frameX = 0;\n    this.frameY = 0;\n    this.maxFrame = 37;\n    // create image for our angler1\n    this.image = createImage(angler1);\n    this.frame = getRandomNumber(0, 2);\n\n    this.width = 228;\n    this.height = 169;\n    this.score = 15;\n  }\n\n  /**\n   * draw enemy on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */\n  draw(c) {\n    super.draw(c);\n\n    c.drawImage(\n      this.image,\n      this.frameX * this.width,\n      this.frameY * this.height,\n      this.width,\n      this.height,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n\n  /**\n   * update our angler1 overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   */\n  update(c) {\n    this.draw(c);\n    this.position.x += this.speedX;\n\n    if (this.position.x + this.width < 0) {\n      this.active = false;\n    }\n\n    // Sprite animation\n    if (this.frameX < this.maxFrame) this.frameX++;\n    else this.frameX = 0;\n  }\n}\n\nexport class Troop extends Enemy {\n  /**\n   * troop enemy\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */\n  constructor({ x, y }) {\n    super({ x, y });\n    // width and height of our troop\n    this.width = 240;\n    this.height = 160;\n    this.active = true;\n    this.speed = 10;\n    this.bullets = [];\n    this.cooldown = 2000; // Set the initial cooldown time (in milliseconds)\n    this.lastShotTime = 0; // Record the time of the last shot\n    this.health = 100;\n    this.score = 5;\n  }\n\n  /**\n   * draw enemy on the canvas\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   */\n  draw(c) {\n    c.drawImage(\n      createImage(idleTroop),\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n\n  /**\n   * update enemy overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   * @param {number} currentTime current time\n   */\n  update(c, currentTime) {\n    this.draw(c);\n    this.handleShooting(currentTime);\n\n    // Handle bullet updates\n    this.bullets.forEach((bullet) => bullet.update(c));\n    this.bullets = this.bullets.filter((bullet) => bullet.active);\n  }\n\n  /**\n   * handle the shooting logic of our enemy\n   *\n   * @param {number} currentTime current time\n   */\n  handleShooting(currentTime) {\n    // Check if enough time has passed since the last shot\n    if (\n      currentTime - this.lastShotTime > this.cooldown &&\n      isElementVisible(this)\n    ) {\n      this.state = troopStates.attack; // Update the state to \"attack\"\n      this.shoot();\n      this.audio.playShootSound();\n      this.lastShotTime = currentTime; // Update the last shot time\n    } else {\n      this.state = troopStates.idle; // Set the state to \"idle\" when not shooting\n    }\n  }\n\n  /**\n   * shoot mechanism for our enemy\n   *\n   */\n  shoot() {\n    this.bullets.push(\n      new Bullet({\n        x: this.position.x,\n        y: this.position.y + this.height / 2,\n        direction: this.direction,\n        damage: 5,\n        color: 'red',\n      })\n    );\n  }\n}\n\nexport class Zombie extends Enemy {\n  /**\n   * zombie enemy\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */\n  constructor({ x, y }) {\n    super({ x, y });\n    this.width = 140;\n    this.height = 140;\n    this.active = true;\n    this.speed = 10;\n\n    this.health = 100;\n    this.score = 5;\n  }\n\n  /**\n   * draw enemy on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */\n  draw(c) {\n    c.drawImage(\n      createImage(idleZombie1),\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n  /**\n   * update enemy overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   */\n  update(c) {\n    this.draw(c);\n    if (this.position.y + this.height < CANVAS_HEIGHT) {\n      this.position.y += GRAVITY + 2;\n    }\n  }\n}\n\nexport class Tower extends Enemy {\n  /**\n   * Tower enemy\n   *\n   * @param {number} x position\n   * @param {number} y position\n   */\n  constructor({ x, y }) {\n    super({ x, y });\n    this.width = 100;\n    this.height = 140;\n    this.active = true;\n    this.speed = 10;\n    this.bullets = [];\n    this.cooldown = 2000; // Set the initial cooldown time (in milliseconds)\n    this.lastShotTime = 0; // Record the time of the last shot\n    this.health = 120;\n    this.score = 10;\n  }\n\n  /**\n   * draw our enemy on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   */\n  draw(c) {\n    c.drawImage(\n      createImage(idleTower),\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n\n  /**\n   * update enemy overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of the canvas\n   * @param {number} currentTime current time\n   */\n  update(c, currentTime) {\n    this.draw(c);\n    this.handleShooting(currentTime);\n\n    // Handle bullet updates\n    this.bullets.forEach((bullet) => bullet.update(c));\n    this.bullets = this.bullets.filter((bullet) => bullet.active);\n  }\n\n  /**\n   * handle the shooting logic of our enemy\n   *\n   * @param {number} currentTime current time\n   */\n  handleShooting(currentTime) {\n    // Check if enough time has passed since the last shot\n    if (\n      currentTime - this.lastShotTime > this.cooldown &&\n      isElementVisible(this)\n    ) {\n      this.audio.playShootSound();\n      this.shoot();\n\n      this.lastShotTime = currentTime; // Update the last shot time\n    }\n  }\n\n  /**\n   * shoot mechanism for our troop\n   */\n  shoot() {\n    this.bullets.push(\n      new Bullet({\n        x: this.position.x + this.width,\n        y: this.position.y + this.height / 2,\n        direction: this.direction,\n        damage: 5,\n        color: 'red',\n      })\n    );\n  }\n}\n","module.exports = new __parcel__URL__(\"angler1.8efa57e4.png\").toString();","module.exports = new __parcel__URL__(\"Idle (1).cd81fc4c.png\").toString();","module.exports = new __parcel__URL__(\"idle.c183103c.png\").toString();","module.exports = new __parcel__URL__(\"idle1.eaa0a694.png\").toString();","/**\n * Manage audio in our game\n *\n */\n\nclass Audio {\n  /**\n   * get the audio DOM\n   *\n   */\n  constructor() {\n    this.backgroundMusic = document.querySelector('#bg-music');\n    this.shootSound = document.querySelector('#shoot-music');\n    this.zombieSound = document.querySelector('#zombie-music');\n    this.enemyDeadSound = document.querySelector('#enemy-dead-music');\n    this.heliMusic = document.querySelector('#heli-music');\n    // Add more audio elements for other sounds as needed\n  }\n\n  /**\n   * play bg music\n   *\n   */\n  playBackgroundMusic() {\n    this.backgroundMusic.play();\n  }\n\n  /**\n   * stop bg music\n   *\n   */\n  stopBackgroundMusic() {\n    this.backgroundMusic.pause();\n  }\n\n  /**\n   * play shoot sound\n   *\n   */\n  playShootSound() {\n    this.shootSound.play();\n  }\n\n  /**\n   * play zombie sound\n   *\n   */\n  playZombieSound() {\n    this.zombieSound.play();\n  }\n\n  /**\n   * play heli sound\n   *\n   */\n  playHeliSound = () => {\n    this.heliMusic.play();\n  };\n}\n\nexport default Audio;\n","import { createImage } from '../utils';\nimport smokeExplosion from '../../assets/smokeExplosion.png';\nimport fireExplosion from '../../assets/fireExplosion.png';\n\nclass Explosion {\n  /**\n   * dimension of our explosion\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   */\n  constructor({ x, y }) {\n    this.position = { x, y };\n    // frames for our explosion\n    this.frameX = 0;\n    this.fps = 15;\n    this.maxFrame = 8;\n    this.spriteHeight = 200;\n    this.timer = 0;\n    this.interval = 1000 / this.fps;\n    this.active = true;\n  }\n\n  /**\n   * update our canvas overtime\n   *\n   * @param {CanvasRenderingContext2D} c ctx of canvas\n   * @param {number} deltatime delta time\n   */\n  update(c, deltatime) {\n    this.draw(c);\n    if (this.timer > this.interval) {\n      this.frameX++;\n      this.timer = 0;\n    } else {\n      this.timer += deltatime;\n    }\n    // if exceeds the frame deactivate\n    if (this.frameX > this.maxFrame) this.active = false;\n  }\n\n  /**\n   * draw image on the canvas\n   *\n   * @param {CanvasRenderingContext2D} c ctx canvas\n   */\n  draw = (c) => {\n    c.drawImage(\n      this.image,\n      this.frameX * this.spriteWidth,\n      0,\n      this.spriteWidth,\n      this.spriteHeight,\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  };\n}\n\nexport class SmokeExplosion extends Explosion {\n  /**\n   * dimension of our smoke explosion\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   */\n  constructor({ x, y }) {\n    super({ x, y });\n    this.image = createImage(smokeExplosion);\n    this.spriteWidth = 200;\n    this.width = this.spriteWidth;\n    this.height = this.spriteHeight;\n    this.x = x - this.width * 0.5;\n    this.y = y - this.height * 0.5;\n  }\n}\n\nexport class FireExplosion extends Explosion {\n  /**\n   * dimension of our fire explosion\n   *\n   * @param {number} x x position\n   * @param {number} y y position\n   */\n  constructor({ x, y }) {\n    super({ x, y });\n    this.image = createImage(fireExplosion);\n    this.spriteWidth = 200;\n    this.width = this.spriteWidth;\n    this.height = this.spriteHeight;\n    this.x = x - this.width * 0.5;\n    this.y = y - this.height * 0.5;\n  }\n}\n","module.exports = new __parcel__URL__(\"smokeExplosion.f72e891c.png\").toString();","module.exports = new __parcel__URL__(\"fireExplosion.5dc59534.png\").toString();"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$bbfd42c14a1d8b99$exports","$3940de47cfa7314f$export$2c9a6d1027132519","innerWidth","$3940de47cfa7314f$export$aeb116877fd5ad06","innerHeight","$a6df9c40ba402dc9$export$ec664d7487540b","imageSrc","image","Image","src","$a6df9c40ba402dc9$export$65cbfae5bde8bfd2","rect1","rect2","position","x","width","y","height","$a6df9c40ba402dc9$export$e989c0fffaa6b27a","element","window","$a6df9c40ba402dc9$export$7ef5126e1343a003","$a6df9c40ba402dc9$export$12fa97fdd42eb2cf","$a6df9c40ba402dc9$export$9b14f7e6190811b1","$cc6ed00b9533af27$export$2e2bcd8739ae039","images","constructor","arrayImage","timerCount","state","stopAtEnd","push","timerCountDefault","imageIndex","isFor","reset","getImage","setImageIndex","shouldStop","$64fbb8abf9a7162d$export$2e2bcd8739ae039","direction","verticalDirection","damage","color","speed","active","update","c","draw","beginPath","arc","Math","PI","fillStyle","fill","$62dad4a9f63439a6$exports","$b22232e1f0ea40fe$exports","$8a4adc73e6d47893$exports","$1b457602c9fc1e59$exports","$3273fc7ec8430bb1$exports","$99e7829adffeb0d3$exports","$03e20da2eabbf420$exports","$eb8890fb01482c15$export$f9624cc0e9ef9307","idle","$eb8890fb01482c15$export$35ee99e056842174","run","$3f59ce11cca20e4f$export$2e2bcd8739ae039","velocity","frames","bullets","cooldown","lastShotTime","isJumping","health","createAnimations","animation","animations","find","save","scale","drawImage","restore","currentTime","forEach","bullet","filter","timeSinceLastShot","canShoot","shootTop","idleAnimation","runAnimation","$4aa097c084906c8e$export$2e2bcd8739ae039","$04e8d882d3ba9d2d$exports","$0b4ac7c6ed41d1ce$exports","$4ea9126f95a08acd$exports","$085935adf2d7a772$exports","$abc2d41911444a16$export$2e2bcd8739ae039","backgroundMusic","document","querySelector","shootSound","zombieSound","enemyDeadSound","heliMusic","playBackgroundMusic","play","stopBackgroundMusic","pause","playShootSound","playZombieSound","playHeliSound","$52804e1fc77d051f$var$Enemy","audio","$52804e1fc77d051f$export$8ee8616438d9455","speedX","random","frameX","frameY","maxFrame","frame","floor","max","score","$52804e1fc77d051f$export$88a18b8cd3b1bce4","handleShooting","attack","shoot","$52804e1fc77d051f$export$6e8a1450080785fb","$52804e1fc77d051f$export$eba177f38926edac","$565a2039ed45c93c$exports","$07cab4aed66d5686$exports","$bd84c1f579e4afac$var$Explosion","fps","spriteHeight","timer","interval","deltatime","spriteWidth","$bd84c1f579e4afac$export$2e80534920b24a5","$bd84c1f579e4afac$export$718daf669a03dd21","$a739d26eedb5c47f$var$canvas","$a739d26eedb5c47f$var$c","getContext","$a739d26eedb5c47f$var$keys","right","pressed","left","$a739d26eedb5c47f$var$lastTime","$a739d26eedb5c47f$export$2e2bcd8739ae039","player","platforms","enemies","generatePlatforms","generateTroops","generateTowers","setupEventListener","scrollOffset","enemyInterval","gameOver","maxMoved","gameTime","lives","explosions","enemySpawnIntervalId","texts","waveIncomingText","startText","setTimeout","isPaused","togglePause","pauseGame","resumeGame","clearInterval","setInterval","chance","addZombie","addAngler1","enemy","handlePlatformMovement","platform","showGameStats","displayMessage","font","shadowOffsetX","shadowOffsetY","shadowColor","fillText","padStart","time","toFixed","text","clearMessage","clearRect","Date","now","explosion","addExplosion","platformCollisionDetection","keysPressed","addEventListener","handleWin","onGameOver","resetLife","handleLose","animate","timestamp","requestAnimationFrame","$8f6a480bb40b134f$var$menuScreen","$8f6a480bb40b134f$var$gameOverScreen","$8f6a480bb40b134f$var$canvasScreen","$8f6a480bb40b134f$var$playBtn","$8f6a480bb40b134f$var$handleGameOver","style","display","$8f6a480bb40b134f$var$play","game"],"version":3,"file":"index.53ea7bc5.js.map"}